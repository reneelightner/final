{"ast":null,"code":"var _jsxFileName = \"/Users/reneelightner/reneelempert/react-development-course-materials/final/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Chart from './Chart.js';\nimport { useState } from 'react';\nimport Artists from './Artists.js';\nimport Favs from './Favs.js';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  YEAR: \"2020\",\n  AWARD: \"RECORD OF THE YEAR\",\n  WINNER: \"Everything I Wanted\",\n  ARTIST: \"Billie Eilish\",\n  ART1: \"Billie Eilish\",\n  ART2: \"\"\n}, {\n  YEAR: \"2020\",\n  AWARD: \"ALBUM OF THE YEAR\",\n  WINNER: \"Folklore\",\n  ARTIST: \"Taylor Swift\",\n  ART1: \"Taylor Swift\",\n  ART2: \"\"\n}, {\n  YEAR: \"2020\",\n  AWARD: \"SONG OF THE YEAR\",\n  WINNER: \"I Can't Breathe\",\n  ARTIST: \"Dernst Emile II, H.E.R. & Tiara Thomas\",\n  ART1: \"Dernst Emile II, H.E.R. & Tiara Thomas\",\n  ART2: \"\"\n}, {\n  YEAR: \"2020\",\n  AWARD: \"BEST NEW ARTIST\",\n  WINNER: \"\",\n  ARTIST: \"Megan Thee Stallion\",\n  ART1: \"Megan Thee Stallion\",\n  ART2: \"\"\n}, {\n  YEAR: \"2019\",\n  AWARD: \"RECORD OF THE YEAR\",\n  WINNER: \"Bad Guy\",\n  ARTIST: \"Billie Eilish\",\n  ART1: \"Billie Eilish\",\n  ART2: \"\"\n}, {\n  YEAR: \"2019\",\n  AWARD: \"ALBUM OF THE YEAR\",\n  WINNER: \"When We All Fall Asleep, Where Do We Go?\",\n  ARTIST: \"Billie Eilish\",\n  ART1: \"Billie Eilish\",\n  ART2: \"\"\n}, {\n  YEAR: \"2019\",\n  AWARD: \"SONG OF THE YEAR\",\n  WINNER: \"Bad Guy\",\n  ARTIST: \"Billie Eilish\",\n  ART1: \"Billie Eilish\",\n  ART2: \"\"\n}, {\n  YEAR: \"2019\",\n  AWARD: \"BEST NEW ARTIST\",\n  WINNER: \"\",\n  ARTIST: \"Billie Eilish\",\n  ART1: \"Billie Eilish\",\n  ART2: \"\"\n}, {\n  YEAR: \"2018\",\n  AWARD: \"RECORD OF THE YEAR\",\n  WINNER: \"This Is America\",\n  ARTIST: \"Childish Gambino\",\n  ART1: \"Childish Gambino\",\n  ART2: \"\"\n}, {\n  YEAR: \"2018\",\n  AWARD: \"ALBUM OF THE YEAR\",\n  WINNER: \"Golden Hour\",\n  ARTIST: \"Kacey Musgraves\",\n  ART1: \"Kacey Musgraves\",\n  ART2: \"\"\n}, {\n  YEAR: \"2018\",\n  AWARD: \"SONG OF THE YEAR\",\n  WINNER: \"This Is America\",\n  ARTIST: \"Childish Gambino\",\n  ART1: \"Childish Gambino\",\n  ART2: \"\"\n}, {\n  YEAR: \"2018\",\n  AWARD: \"BEST NEW ARTIST\",\n  WINNER: \"\",\n  ARTIST: \"Dua Lipa\",\n  ART1: \"Dua Lipa\",\n  ART2: \"\"\n}, {\n  YEAR: \"2017\",\n  AWARD: \"RECORD OF THE YEAR\",\n  WINNER: \"24K Magic\",\n  ARTIST: \"Bruno Mars\",\n  ART1: \"Bruno Mars\",\n  ART2: \"\"\n}, {\n  YEAR: \"2017\",\n  AWARD: \"ALBUM OF THE YEAR\",\n  WINNER: \"24K Magic\",\n  ARTIST: \"Bruno Mars\",\n  ART1: \"Bruno Mars\",\n  ART2: \"\"\n}, {\n  YEAR: \"2017\",\n  AWARD: \"SONG OF THE YEAR\",\n  WINNER: \"That's What I Like\",\n  ARTIST: \"Bruno Mars\",\n  ART1: \"Bruno Mars\",\n  ART2: \"\"\n}, {\n  YEAR: \"2017\",\n  AWARD: \"BEST NEW ARTIST\",\n  WINNER: \"\",\n  ARTIST: \"Alessia Cara\",\n  ART1: \"Alessia Cara\",\n  ART2: \"\"\n}, {\n  YEAR: \"2016\",\n  AWARD: \"RECORD OF THE YEAR\",\n  WINNER: \"Hello\",\n  ARTIST: \"Adele\",\n  ART1: \"Adele\",\n  ART2: \"\"\n}, {\n  YEAR: \"2016\",\n  AWARD: \"ALBUM OF THE YEAR\",\n  WINNER: \"25\",\n  ARTIST: \"Adele\",\n  ART1: \"Adele\",\n  ART2: \"\"\n}, {\n  YEAR: \"2016\",\n  AWARD: \"SONG OF THE YEAR\",\n  WINNER: \"Hello\",\n  ARTIST: \"Adele\",\n  ART1: \"Adele\",\n  ART2: \"\"\n}, {\n  YEAR: \"2016\",\n  AWARD: \"BEST NEW ARTIST\",\n  WINNER: \"\",\n  ARTIST: \"Chance The Rapper\",\n  ART1: \"Chance The Rapper\",\n  ART2: \"\"\n}]; // create array of unique artist names\n\nconst artistArray = [...new Set(data.map(item => item.ART1))];\ndata.forEach(function (award) {\n  if (!artistArray.includes(award.ART2)) {\n    return award.ART2;\n  }\n}); // make array of objects - each obj an artist (used for drop down options)\n\nconst artistOptions = artistArray.map(artist => {\n  return {\n    text: artist,\n    value: artist\n  };\n}); // App component\n\nexport default function App() {\n  _s();\n\n  const [artist, setArtist] = useState('');\n  const [favs, setFavs] = useState(['Bruno Mars']);\n\n  const handleArtistChange = artist => {\n    setArtist(artist);\n  };\n\n  const handleFavArtist = () => {\n    let currFavs = favs;\n\n    if (!favs.includes(artist)) {\n      currFavs.push(artist);\n      setFavs([...currFavs]);\n    }\n  };\n\n  const pickedFavs = favs.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(Favs, {\n      artist: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Final Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Awards for \", artist]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFavArtist,\n      children: \"\\u2764\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Artists, {\n      options: artistOptions,\n      onArtistChange: handleArtistChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Favorite artists:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), pickedFavs, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"click to remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      data: data,\n      height: 150,\n      width: 960,\n      show: \"Grammys\",\n      artist: artist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"6v0AiE/1AF8jpuYzZUzPwsoo1ZU=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/reneelightner/reneelempert/react-development-course-materials/final/src/App.js"],"names":["Chart","useState","Artists","Favs","d3","data","YEAR","AWARD","WINNER","ARTIST","ART1","ART2","artistArray","Set","map","item","forEach","award","includes","artistOptions","artist","text","value","App","setArtist","favs","setFavs","handleArtistChange","handleFavArtist","currFavs","push","pickedFavs","index"],"mappings":"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","sourcesContent":["import './App.css';\nimport Chart from './Chart.js';\nimport {useState} from 'react';\nimport Artists from './Artists.js';\nimport Favs from './Favs.js';\nimport * as d3 from 'd3';\n\nconst data = [\n  {YEAR: \"2020\", AWARD: \"RECORD OF THE YEAR\", WINNER: \"Everything I Wanted\", ARTIST: \"Billie Eilish\", ART1: \"Billie Eilish\", ART2: \"\"},\n  {YEAR: \"2020\", AWARD: \"ALBUM OF THE YEAR\", WINNER: \"Folklore\", ARTIST: \"Taylor Swift\", ART1: \"Taylor Swift\", ART2: \"\"},\n  {YEAR: \"2020\", AWARD: \"SONG OF THE YEAR\", WINNER: \"I Can't Breathe\", ARTIST: \"Dernst Emile II, H.E.R. & Tiara Thomas\", ART1: \"Dernst Emile II, H.E.R. & Tiara Thomas\", ART2: \"\"},\n  {YEAR: \"2020\", AWARD: \"BEST NEW ARTIST\", WINNER: \"\", ARTIST: \"Megan Thee Stallion\", ART1: \"Megan Thee Stallion\", ART2: \"\"},\n  {YEAR: \"2019\", AWARD: \"RECORD OF THE YEAR\", WINNER: \"Bad Guy\", ARTIST: \"Billie Eilish\", ART1: \"Billie Eilish\", ART2: \"\"},\n  {YEAR: \"2019\", AWARD: \"ALBUM OF THE YEAR\", WINNER: \"When We All Fall Asleep, Where Do We Go?\", ARTIST: \"Billie Eilish\", ART1: \"Billie Eilish\", ART2: \"\"},\n  {YEAR: \"2019\", AWARD: \"SONG OF THE YEAR\", WINNER: \"Bad Guy\", ARTIST: \"Billie Eilish\", ART1: \"Billie Eilish\", ART2: \"\"},\n  {YEAR: \"2019\", AWARD: \"BEST NEW ARTIST\", WINNER: \"\", ARTIST: \"Billie Eilish\", ART1: \"Billie Eilish\", ART2: \"\"},\n  {YEAR: \"2018\", AWARD: \"RECORD OF THE YEAR\", WINNER: \"This Is America\", ARTIST: \"Childish Gambino\", ART1: \"Childish Gambino\", ART2: \"\"},\n  {YEAR: \"2018\", AWARD: \"ALBUM OF THE YEAR\", WINNER: \"Golden Hour\", ARTIST: \"Kacey Musgraves\", ART1: \"Kacey Musgraves\", ART2: \"\"},\n  {YEAR: \"2018\", AWARD: \"SONG OF THE YEAR\", WINNER: \"This Is America\", ARTIST: \"Childish Gambino\", ART1: \"Childish Gambino\", ART2: \"\"},\n  {YEAR: \"2018\", AWARD: \"BEST NEW ARTIST\", WINNER: \"\", ARTIST: \"Dua Lipa\", ART1: \"Dua Lipa\", ART2: \"\"},\n  {YEAR: \"2017\", AWARD: \"RECORD OF THE YEAR\", WINNER: \"24K Magic\", ARTIST: \"Bruno Mars\", ART1: \"Bruno Mars\", ART2: \"\"},\n  {YEAR: \"2017\", AWARD: \"ALBUM OF THE YEAR\", WINNER: \"24K Magic\", ARTIST: \"Bruno Mars\", ART1: \"Bruno Mars\", ART2: \"\"},\n  {YEAR: \"2017\", AWARD: \"SONG OF THE YEAR\", WINNER: \"That's What I Like\", ARTIST: \"Bruno Mars\", ART1: \"Bruno Mars\", ART2: \"\"},\n  {YEAR: \"2017\", AWARD: \"BEST NEW ARTIST\", WINNER: \"\", ARTIST: \"Alessia Cara\", ART1: \"Alessia Cara\", ART2: \"\"},\n  {YEAR: \"2016\", AWARD: \"RECORD OF THE YEAR\", WINNER: \"Hello\", ARTIST: \"Adele\", ART1: \"Adele\", ART2: \"\"},\n  {YEAR: \"2016\", AWARD: \"ALBUM OF THE YEAR\", WINNER: \"25\", ARTIST: \"Adele\", ART1: \"Adele\", ART2: \"\"},\n  {YEAR: \"2016\", AWARD: \"SONG OF THE YEAR\", WINNER: \"Hello\", ARTIST: \"Adele\", ART1: \"Adele\", ART2: \"\"},\n  {YEAR: \"2016\", AWARD: \"BEST NEW ARTIST\", WINNER: \"\", ARTIST: \"Chance The Rapper\", ART1: \"Chance The Rapper\", ART2: \"\"}\n];\n\n// create array of unique artist names\nconst artistArray = [...new Set(data.map(item => item.ART1))]; \ndata.forEach(function (award) {\n\tif (!artistArray.includes(award.ART2)) {return award.ART2}\n}); \n\n// make array of objects - each obj an artist (used for drop down options)\nconst artistOptions = artistArray.map((artist) => { return {text: artist, value: artist} });\n\n// App component\nexport default function App() {\n  const [artist, setArtist] = useState('');\n  const [favs, setFavs] = useState(['Bruno Mars']);\n\n  const handleArtistChange = (artist) => {\n    setArtist(artist);\n  }\n\n  const handleFavArtist = () => {\n    let currFavs = favs;\n    if (!favs.includes(artist)) {\n      currFavs.push(artist);\n      setFavs([...currFavs]);\n    }\n  }\n\n  const pickedFavs = favs.map((item, index)=>{\n    return <Favs artist={item}></Favs>\n  })\n\n  return (\n    <div className=\"App\">\n      <h1>Final Project</h1>\n      <h2>Awards for {artist}</h2>\n      <button onClick={handleFavArtist}>❤️</button>\n      <Artists options={artistOptions} onArtistChange={handleArtistChange}/>\n      <div className=\"App\">\n        <span>Favorite artists:</span> \n        {pickedFavs}\n        <p><span><i>click to remove</i></span></p>\n      </div>\n      <Chart data={data} height={150} width={960} show={\"Grammys\"} artist={artist} />\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}