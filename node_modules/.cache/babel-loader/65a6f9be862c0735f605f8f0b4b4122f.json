{"ast":null,"code":"var _jsxFileName = \"/Users/reneelightner/reneelempert/react-development-course-materials/final/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Chart from './Chart.js';\nimport { useState, useEffect } from 'react';\nimport Artists from './Artists.js';\nimport Favs from './Favs.js';\nimport mtvCSV from './data/mtv.csv';\nimport grammysJSON from './data/dataGrammys.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst grammysAwards = [...new Set(grammysJSON.map(item => item['AWARD']))]; // create array of unique artist names\n\nlet artistArray = [...new Set(grammysJSON.map(item => item['ART-1']))];\ngrammysJSON.forEach(function (award) {\n  if (!artistArray.includes(award['ART-2'])) {\n    return award['ART-2'];\n  }\n});\nconsole.log(artistArray); // filter out any empty artists\n\nartistArray = artistArray.filter(item => {\n  return item !== \"\";\n}); // sort artist array in alpa order\n\nartistArray = artistArray.sort(); // make array of objects - each obj is an artist (used for drop down options)\n\nconst artistOptions = artistArray.map(artist => {\n  return {\n    text: artist,\n    value: artist\n  };\n}); // App component\n\nexport default function App() {\n  _s();\n\n  const [artist, setArtist] = useState('');\n  const [favs, setFavs] = useState(['Bruno Mars']);\n  const [grammysData, setgrammysData] = useState([...grammysJSON]);\n  const [mtvData, setMtvData] = useState([]);\n\n  const handleArtistChange = artist => {\n    setArtist(artist);\n  };\n\n  const handleFavArtist = () => {\n    let currFavs = favs;\n\n    if (!favs.includes(artist)) {\n      currFavs.push(artist);\n      setFavs([...currFavs]);\n    }\n  };\n\n  const pickedFavs = favs.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(Favs, {\n      artist: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Final Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Awards for \", artist]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFavArtist,\n      children: \"\\u2764\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Artists, {\n      options: artistOptions,\n      onArtistChange: handleArtistChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Favorite artists:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), pickedFavs, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"click to remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      data: grammysData,\n      awards: grammysAwards,\n      height: 150,\n      width: 960,\n      show: \"Grammys\",\n      artist: artist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"0bn00izT1fCp4nc75hFDtWZVtJM=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/reneelightner/reneelempert/react-development-course-materials/final/src/App.js"],"names":["Chart","useState","useEffect","Artists","Favs","mtvCSV","grammysJSON","grammysAwards","Set","map","item","artistArray","forEach","award","includes","console","log","filter","sort","artistOptions","artist","text","value","App","setArtist","favs","setFavs","grammysData","setgrammysData","mtvData","setMtvData","handleArtistChange","handleFavArtist","currFavs","push","pickedFavs","index"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,YAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;AAEA,MAAMC,aAAa,GAAG,CAAC,GAAG,IAAIC,GAAJ,CAAQF,WAAW,CAACG,GAAZ,CAAgBC,IAAI,IAAIA,IAAI,CAAC,OAAD,CAA5B,CAAR,CAAJ,CAAtB,C,CAEA;;AACA,IAAIC,WAAW,GAAG,CAAC,GAAG,IAAIH,GAAJ,CAAQF,WAAW,CAACG,GAAZ,CAAgBC,IAAI,IAAIA,IAAI,CAAC,OAAD,CAA5B,CAAR,CAAJ,CAAlB;AACAJ,WAAW,CAACM,OAAZ,CAAoB,UAAUC,KAAV,EAAiB;AACpC,MAAI,CAACF,WAAW,CAACG,QAAZ,CAAqBD,KAAK,CAAC,OAAD,CAA1B,CAAL,EAA2C;AAAC,WAAOA,KAAK,CAAC,OAAD,CAAZ;AAAsB;AAClE,CAFD;AAGAE,OAAO,CAACC,GAAR,CAAYL,WAAZ,E,CAEA;;AACAA,WAAW,GAAGA,WAAW,CAACM,MAAZ,CAAmBP,IAAI,IAAI;AACvC,SAAOA,IAAI,KAAK,EAAhB;AACD,CAFa,CAAd,C,CAGA;;AACAC,WAAW,GAAGA,WAAW,CAACO,IAAZ,EAAd,C,CAEA;;AACA,MAAMC,aAAa,GAAGR,WAAW,CAACF,GAAZ,CAAiBW,MAAD,IAAY;AAAE,SAAO;AAACC,IAAAA,IAAI,EAAED,MAAP;AAAeE,IAAAA,KAAK,EAAEF;AAAtB,GAAP;AAAsC,CAApE,CAAtB,C,CAEA;;AACA,eAAe,SAASG,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACH,MAAD,EAASI,SAAT,IAAsBvB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACwB,IAAD,EAAOC,OAAP,IAAkBzB,QAAQ,CAAC,CAAC,YAAD,CAAD,CAAhC;AACA,QAAM,CAAC0B,WAAD,EAAcC,cAAd,IAAgC3B,QAAQ,CAAC,CAAC,GAAGK,WAAJ,CAAD,CAA9C;AACA,QAAM,CAACuB,OAAD,EAAUC,UAAV,IAAwB7B,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAM8B,kBAAkB,GAAIX,MAAD,IAAY;AACrCI,IAAAA,SAAS,CAACJ,MAAD,CAAT;AACD,GAFD;;AAIA,QAAMY,eAAe,GAAG,MAAM;AAC5B,QAAIC,QAAQ,GAAGR,IAAf;;AACA,QAAI,CAACA,IAAI,CAACX,QAAL,CAAcM,MAAd,CAAL,EAA4B;AAC1Ba,MAAAA,QAAQ,CAACC,IAAT,CAAcd,MAAd;AACAM,MAAAA,OAAO,CAAC,CAAC,GAAGO,QAAJ,CAAD,CAAP;AACD;AACF,GAND;;AAQA,QAAME,UAAU,GAAGV,IAAI,CAAChB,GAAL,CAAS,CAACC,IAAD,EAAO0B,KAAP,KAAe;AACzC,wBAAO,QAAC,IAAD;AAAM,MAAA,MAAM,EAAE1B;AAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFkB,CAAnB;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gCAAgBU,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEY,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,OAAD;AAAS,MAAA,OAAO,EAAEb,aAAlB;AAAiC,MAAA,cAAc,EAAEY;AAAjD;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGI,UAFH,eAGE;AAAA,+BAAG;AAAA,iCAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAN;AAAA;AAAA;AAAA;AAAA;AAAH;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAUE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAER,WAAb;AAA0B,MAAA,MAAM,EAAEpB,aAAlC;AAAiD,MAAA,MAAM,EAAE,GAAzD;AAA8D,MAAA,KAAK,EAAE,GAArE;AAA0E,MAAA,IAAI,EAAE,SAAhF;AAA2F,MAAA,MAAM,EAAEa;AAAnG;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GArCuBG,G;;KAAAA,G","sourcesContent":["import './App.css';\nimport Chart from './Chart.js';\nimport {useState, useEffect} from 'react';\nimport Artists from './Artists.js';\nimport Favs from './Favs.js';\nimport mtvCSV from './data/mtv.csv'\nimport grammysJSON from './data/dataGrammys.json';\n\nconst grammysAwards = [...new Set(grammysJSON.map(item => item['AWARD']))];\n\n// create array of unique artist names\nlet artistArray = [...new Set(grammysJSON.map(item => item['ART-1']))];\ngrammysJSON.forEach(function (award) {\n\tif (!artistArray.includes(award['ART-2'])) {return award['ART-2']}\n}); \nconsole.log(artistArray);\n\n// filter out any empty artists\nartistArray = artistArray.filter(item => {\n  return item !== \"\"\n})\n// sort artist array in alpa order\nartistArray = artistArray.sort();\n\n// make array of objects - each obj is an artist (used for drop down options)\nconst artistOptions = artistArray.map((artist) => { return {text: artist, value: artist} });\n\n// App component\nexport default function App() {\n  const [artist, setArtist] = useState('');\n  const [favs, setFavs] = useState(['Bruno Mars']);\n  const [grammysData, setgrammysData] = useState([...grammysJSON]);\n  const [mtvData, setMtvData] = useState([]);\n\n  const handleArtistChange = (artist) => {\n    setArtist(artist);\n  }\n\n  const handleFavArtist = () => {\n    let currFavs = favs;\n    if (!favs.includes(artist)) {\n      currFavs.push(artist);\n      setFavs([...currFavs]);\n    }\n  }\n\n  const pickedFavs = favs.map((item, index)=>{\n    return <Favs artist={item}></Favs>\n  })\n\n  return (\n    <div className=\"App\">\n      <h1>Final Project</h1>\n      <h2>Awards for {artist}</h2>\n      <button onClick={handleFavArtist}>❤️</button>\n      <Artists options={artistOptions} onArtistChange={handleArtistChange}/>\n      <div className=\"App\">\n        <span>Favorite artists:</span> \n        {pickedFavs}\n        <p><span><i>click to remove</i></span></p>\n      </div>\n      <Chart data={grammysData} awards={grammysAwards} height={150} width={960} show={\"Grammys\"} artist={artist} />\n      {/* <Chart data={mtvData} height={150} width={960} show={\"MTV\"} artist={artist} /> */}\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}