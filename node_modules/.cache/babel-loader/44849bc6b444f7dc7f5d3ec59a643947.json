{"ast":null,"code":"var _jsxFileName = \"/Users/reneelightner/reneelempert/react-development-course-materials/final/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Chart from './Chart.js';\nimport { useState } from 'react';\nimport Artists from './Artists.js';\nimport Favs from './Favs.js';\nimport grammysJSON from './data/dataGrammys.json';\nimport mtvJSON from './data/dataMTV.json';\nimport billboardJSON from './data/dataBillboard.json';\nimport amaJSON from './data/dataAMA.json';\nimport superbowlJSON from './data/dataSuperBowl.json';\nimport fixArtistSummary from './fixArtistSummary.js';\nimport { Markup } from 'interweave'; // award names for each award show\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst grammysAwards = [...new Set(grammysJSON.map(item => item['AWARD']))];\nconst mtvAwards = [...new Set(mtvJSON.map(item => item['AWARD']))];\nconst billboardAwards = [...new Set(billboardJSON.map(item => item['AWARD']))];\nconst amaAwards = [...new Set(amaJSON.map(item => item['AWARD']))];\nconst superBowlAwards = [...new Set(superbowlJSON.map(item => item['AWARD']))]; // get artist names for drop down:\n// create array of unique artist names\n\nlet artistArray = [...new Set(grammysJSON.map(item => item['ART-1']))];\ngrammysJSON.forEach(function (award) {\n  if (!artistArray.includes(award['ART-2'])) {\n    artistArray.push(award['ART-2']);\n  }\n\n  if (!artistArray.includes(award['ART-3'])) {\n    artistArray.push(award['ART-3']);\n  }\n});\nmtvJSON.forEach(function (award) {\n  if (!artistArray.includes(award['ART-1'])) {\n    artistArray.push(award['ART-1']);\n  }\n\n  if (!artistArray.includes(award['ART-2'])) {\n    artistArray.push(award['ART-2']);\n  }\n\n  if (!artistArray.includes(award['ART-3'])) {\n    artistArray.push(award['ART-3']);\n  }\n});\nbillboardJSON.forEach(function (award) {\n  if (!artistArray.includes(award['ART-1'])) {\n    artistArray.push(award['ART-1']);\n  }\n\n  if (!artistArray.includes(award['ART-2'])) {\n    artistArray.push(award['ART-2']);\n  }\n\n  if (!artistArray.includes(award['ART-3'])) {\n    artistArray.push(award['ART-3']);\n  }\n});\namaJSON.forEach(function (award) {\n  if (!artistArray.includes(award['ART-1'])) {\n    artistArray.push(award['ART-1']);\n  }\n});\nsuperbowlJSON.forEach(function (award) {\n  if (!artistArray.includes(award['ART-1'])) {\n    artistArray.push(award['ART-1']);\n  }\n\n  if (!artistArray.includes(award['ART-2'])) {\n    artistArray.push(award['ART-2']);\n  }\n\n  if (!artistArray.includes(award['ART-3'])) {\n    artistArray.push(award['ART-3']);\n  }\n\n  if (!artistArray.includes(award['ART-4'])) {\n    artistArray.push(award['ART-4']);\n  }\n\n  if (!artistArray.includes(award['ART-5'])) {\n    artistArray.push(award['ART-5']);\n  }\n\n  if (!artistArray.includes(award['ART-6'])) {\n    artistArray.push(award['ART-6']);\n  }\n}); // filter out any empty artists\n\nartistArray = artistArray.filter(item => {\n  return item !== \"\";\n}); // sort artist array in alpa order\n\nartistArray = artistArray.sort(); // make array of objects - each obj is an artist (used for drop down options)\n\nconst artistOptions = artistArray.map(artist => {\n  return {\n    text: artist,\n    value: artist\n  };\n});\n\nfunction getArtistCount(data, artist) {\n  let count = 0;\n\n  for (let k of data) {\n    if (k['ART-1'] == artist) {\n      count++;\n    }\n\n    if (k['ART-2'] == artist) {\n      count++;\n    }\n\n    if (k['ART-3'] == artist) {\n      count++;\n    }\n\n    if (k['ART-4'] == artist) {\n      count++;\n    }\n\n    if (k['ART-5'] == artist) {\n      count++;\n    }\n\n    if (k['ART-6'] == artist) {\n      count++;\n    }\n  }\n\n  ;\n  return count;\n} // multiple artist with this name on last fm so we need to fix summary\n\n\nconst artistsFixSummary = ['Chris Brown', 'Creed', 'Eve', 'John Mayer', 'Next', 'Nirvana', 'Roger Miller', 'The Cars', 'Zayn'];\nexport default function App() {\n  _s();\n\n  const [artist, setArtist] = useState('none');\n  const [favs, setFavs] = useState([]);\n  const [grammysCountArtist, setgrammysCountArtist] = useState(0);\n  const [mtvCountArtist, setmtvCountArtist] = useState(0);\n  const [billboardCountArtist, setbillboardCountArtist] = useState(0);\n  const [amaCountArtist, setamaCountArtist] = useState(0);\n  const [superbowlCountArtist, setsuperbowlCountArtist] = useState(0);\n  const [artistSummary, setartistSummary] = useState(' ');\n  const [value, setValue] = useState(null);\n  const [showFavBtn, setshowFavBtn] = useState(false);\n  const [artistAwardsTotal, setartistAwardsTotal] = useState(null);\n\n  const handleArtistSelection = artist => {\n    setValue(artist);\n    setArtist(artist);\n    getArtistSummary(artist);\n    setshowFavBtn(true);\n    let currArtistAwardsArr = [];\n    let grammyCount = getArtistCount(grammysJSON, artist);\n    setgrammysCountArtist(grammyCount);\n\n    if (grammyCount > 0) {\n      currArtistAwardsArr.push({\n        show: 'Grammy',\n        num: grammyCount\n      });\n    }\n\n    let mtvCount = getArtistCount(mtvJSON, artist);\n    setmtvCountArtist(mtvCount);\n\n    if (mtvCount > 0) {\n      currArtistAwardsArr.push({\n        show: 'MTV VMA',\n        num: mtvCount\n      });\n    }\n\n    let billboardCount = getArtistCount(billboardJSON, artist);\n    setbillboardCountArtist(billboardCount);\n\n    if (billboardCount > 0) {\n      currArtistAwardsArr.push({\n        show: 'Billboard Music Award',\n        num: billboardCount\n      });\n    }\n\n    let amaCount = getArtistCount(amaJSON, artist);\n    setamaCountArtist(amaCount);\n\n    if (amaCount > 0) {\n      currArtistAwardsArr.push({\n        show: 'AMA',\n        num: amaCount\n      });\n    }\n\n    let superbowlCount = getArtistCount(superbowlJSON, artist);\n    setsuperbowlCountArtist(superbowlCount);\n\n    if (superbowlCount > 0) {\n      currArtistAwardsArr.push({\n        show: 'headlined the Super Bowl halftime show',\n        num: superbowlCount\n      });\n    }\n\n    let currArtistAwards = '';\n\n    for (let key of currArtistAwardsArr) {\n      if (key.show == 'headlined the Super Bowl halftime show') {\n        let endingText;\n        key.num > 1 ? endingText = ' times, ' : endingText = ' time, ';\n        currArtistAwards = currArtistAwards + key.show + ' ' + key.num + endingText;\n      } else {\n        let endingText;\n        key.num > 1 ? endingText = 's, ' : endingText = ', ';\n        currArtistAwards = currArtistAwards + key.num + ' ' + key.show + endingText;\n      }\n    }\n\n    currArtistAwards = currArtistAwards.substring(0, currArtistAwards.length - 2);\n    setartistAwardsTotal(currArtistAwards);\n  };\n\n  const lastfm = {\n    api_key: 'a36b582801c6e46141b9896f2b65b1c4'\n  };\n\n  function getArtistSummary(artist) {\n    artist = artist.replace(/’/g, '%27');\n    artist = artist.replace(/&/g, '%26');\n    const url = `http://ws.audioscrobbler.com/2.0/?method=artist.getinfo&artist=${artist}&api_key=${lastfm.api_key}&format=json`;\n    fetch(url).then(response => {\n      return response.json();\n    }).then(data => {\n      let summary = data.artist.bio.summary;\n\n      if (artistsFixSummary.includes(artist)) {\n        summary = fixArtistSummary(artist, summary);\n      }\n\n      setartistSummary(summary);\n    });\n  }\n\n  const handleFavArtist = (add, theartist) => {\n    let currFavs = favs;\n\n    if (!favs.includes(theartist) && add) {\n      currFavs.push(theartist);\n      setFavs([...currFavs]);\n    } else if (favs.includes(theartist)) {\n      let index = currFavs.indexOf(theartist);\n      currFavs.splice(index, 1);\n      setFavs([...currFavs]);\n    }\n  };\n\n  const pickedFavs = () => {\n    if (favs.length) {\n      let favsArr = favs.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(Favs, {\n          artist: item,\n          artistSelection: handleArtistSelection,\n          handleAristRemove: handleFavArtist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 16\n        }, this);\n      });\n      return favsArr;\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"There are currently no favorite artists in your list.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  const artistAwardText = () => {\n    if (artist === 'none') {\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Pick an artist to see their award(s)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Awards for \", artist]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"(\", artistAwardsTotal, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 47\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  const artistSummaryText = () => {\n    if (artist === 'none') {\n      return 'Pick an artist to read more about them';\n    } else {\n      return artist;\n    }\n  };\n\n  const chartsConfig = [{\n    data: grammysJSON,\n    awards: grammysAwards,\n    awardCountForArist: grammysCountArtist,\n    id: 'grammy',\n    height: 130,\n    show: 'Grammys'\n  }, {\n    data: mtvJSON,\n    awards: mtvAwards,\n    awardCountForArist: mtvCountArtist,\n    id: 'mtv',\n    height: 170,\n    show: 'MTV Video Music Awards'\n  }, {\n    data: billboardJSON,\n    awards: billboardAwards,\n    awardCountForArist: billboardCountArtist,\n    id: 'billboard',\n    height: 170,\n    show: 'Billboard Music Awards'\n  }, {\n    data: amaJSON,\n    awards: amaAwards,\n    awardCountForArist: amaCountArtist,\n    id: 'ama',\n    height: 120,\n    show: 'American Music Awards'\n  }, {\n    data: superbowlJSON,\n    awards: superBowlAwards,\n    awardCountForArist: superbowlCountArtist,\n    id: 'superbowl',\n    height: 60,\n    show: 'Super Bowl Halftime Show Headliner'\n  }];\n  const charts = chartsConfig.map((item, index) => {\n    if (item.awardCountForArist > 0) {\n      return /*#__PURE__*/_jsxDEV(Chart, {\n        data: item.data,\n        awards: item.awards,\n        awardCountForArist: item.awardCountForArist,\n        id: item.id,\n        height: item.height,\n        show: item.show,\n        artist: artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 14\n      }, this);\n    }\n  });\n\n  const FavBtn = () => /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"btn btn-light\",\n    onClick: () => {\n      handleFavArtist(true, artist);\n    },\n    children: \"\\u2764\\uFE0F\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Explore Music Award Show Winners\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Pick an Artist:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Artists, {\n      options: artistOptions,\n      onArtistChange: handleArtistSelection,\n      placeholder: 'Artists',\n      value: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-sm-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-header\",\n            children: \"About this artist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              class: \"card-title\",\n              children: [artistSummaryText(), showFavBtn ? /*#__PURE__*/_jsxDEV(FavBtn, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 74\n              }, this) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              class: \"card-text\",\n              children: /*#__PURE__*/_jsxDEV(Markup, {\n                content: artistSummary\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-sm-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-header\",\n            children: \"My Favorite Artists\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-body\",\n            children: pickedFavs()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Choose an artist. Then select the \\u2764\\uFE0F icon to 'bookmark' that artist. Click X to remove them from the list.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), artistAwardText(), charts]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"iJ3kq6ImPrlkF69LZzh/xfuu7CE=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/reneelightner/reneelempert/react-development-course-materials/final/src/App.js"],"names":["Chart","useState","Artists","Favs","grammysJSON","mtvJSON","billboardJSON","amaJSON","superbowlJSON","fixArtistSummary","Markup","grammysAwards","Set","map","item","mtvAwards","billboardAwards","amaAwards","superBowlAwards","artistArray","forEach","award","includes","push","filter","sort","artistOptions","artist","text","value","getArtistCount","data","count","k","artistsFixSummary","App","setArtist","favs","setFavs","grammysCountArtist","setgrammysCountArtist","mtvCountArtist","setmtvCountArtist","billboardCountArtist","setbillboardCountArtist","amaCountArtist","setamaCountArtist","superbowlCountArtist","setsuperbowlCountArtist","artistSummary","setartistSummary","setValue","showFavBtn","setshowFavBtn","artistAwardsTotal","setartistAwardsTotal","handleArtistSelection","getArtistSummary","currArtistAwardsArr","grammyCount","show","num","mtvCount","billboardCount","amaCount","superbowlCount","currArtistAwards","key","endingText","substring","length","lastfm","api_key","replace","url","fetch","then","response","json","summary","bio","handleFavArtist","add","theartist","currFavs","index","indexOf","splice","pickedFavs","favsArr","artistAwardText","artistSummaryText","chartsConfig","awards","awardCountForArist","id","height","charts","FavBtn"],"mappings":"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","sourcesContent":["import './App.css';\nimport Chart from './Chart.js';\nimport {useState} from 'react';\nimport Artists from './Artists.js';\nimport Favs from './Favs.js';\nimport grammysJSON from './data/dataGrammys.json';\nimport mtvJSON from './data/dataMTV.json';\nimport billboardJSON from './data/dataBillboard.json';\nimport amaJSON from './data/dataAMA.json';\nimport superbowlJSON from './data/dataSuperBowl.json';\nimport fixArtistSummary from './fixArtistSummary.js';\nimport { Markup } from 'interweave';\n\n// award names for each award show\nconst grammysAwards = [...new Set(grammysJSON.map(item => item['AWARD']))];\nconst mtvAwards = [...new Set(mtvJSON.map(item => item['AWARD']))];\nconst billboardAwards = [...new Set(billboardJSON.map(item => item['AWARD']))];\nconst amaAwards = [...new Set(amaJSON.map(item => item['AWARD']))];\nconst superBowlAwards = [...new Set(superbowlJSON.map(item => item['AWARD']))];\n\n// get artist names for drop down:\n// create array of unique artist names\nlet artistArray = [...new Set(grammysJSON.map(item => item['ART-1']))];\ngrammysJSON.forEach(function (award) {\n\tif (!artistArray.includes(award['ART-2'])) {artistArray.push(award['ART-2'])}\n  if (!artistArray.includes(award['ART-3'])) {artistArray.push(award['ART-3'])}\n}); \nmtvJSON.forEach(function (award) {\n\tif (!artistArray.includes(award['ART-1'])) {artistArray.push(award['ART-1'])}\n  if (!artistArray.includes(award['ART-2'])) {artistArray.push(award['ART-2'])}\n  if (!artistArray.includes(award['ART-3'])) {artistArray.push(award['ART-3'])}\n});\nbillboardJSON.forEach(function (award) {\n\tif (!artistArray.includes(award['ART-1'])) {artistArray.push(award['ART-1'])}\n  if (!artistArray.includes(award['ART-2'])) {artistArray.push(award['ART-2'])}\n  if (!artistArray.includes(award['ART-3'])) {artistArray.push(award['ART-3'])}\n});\namaJSON.forEach(function (award) {\n\tif (!artistArray.includes(award['ART-1'])) {artistArray.push(award['ART-1'])}\n});\nsuperbowlJSON.forEach(function (award) {\n\tif (!artistArray.includes(award['ART-1'])) {artistArray.push(award['ART-1'])}\n  if (!artistArray.includes(award['ART-2'])) {artistArray.push(award['ART-2'])}\n  if (!artistArray.includes(award['ART-3'])) {artistArray.push(award['ART-3'])}\n  if (!artistArray.includes(award['ART-4'])) {artistArray.push(award['ART-4'])}\n  if (!artistArray.includes(award['ART-5'])) {artistArray.push(award['ART-5'])}\n  if (!artistArray.includes(award['ART-6'])) {artistArray.push(award['ART-6'])}\n});\n// filter out any empty artists\nartistArray = artistArray.filter(item => {\n  return item !== \"\"\n})\n// sort artist array in alpa order\nartistArray = artistArray.sort();\n// make array of objects - each obj is an artist (used for drop down options)\nconst artistOptions = artistArray.map((artist) => { return {text: artist, value: artist} });\n\nfunction getArtistCount(data, artist) {\n  let count = 0;\n  for (let k of data) {\n    if (k['ART-1'] == artist) { count++; }\n    if (k['ART-2'] == artist) { count++; }\n    if (k['ART-3'] == artist) { count++; }\n    if (k['ART-4'] == artist) { count++; }\n    if (k['ART-5'] == artist) { count++; }\n    if (k['ART-6'] == artist) { count++; }\n  };\n  return count;\n}\n\n// multiple artist with this name on last fm so we need to fix summary\nconst artistsFixSummary = ['Chris Brown', 'Creed', 'Eve', 'John Mayer', 'Next', 'Nirvana', 'Roger Miller', 'The Cars', 'Zayn'];\n\nexport default function App() {\n  const [artist, setArtist] = useState('none');\n  const [favs, setFavs] = useState([]);\n  const [grammysCountArtist, setgrammysCountArtist] = useState(0);\n  const [mtvCountArtist, setmtvCountArtist] = useState(0);\n  const [billboardCountArtist, setbillboardCountArtist] = useState(0);\n  const [amaCountArtist, setamaCountArtist] = useState(0);\n  const [superbowlCountArtist, setsuperbowlCountArtist] = useState(0);\n  const [artistSummary, setartistSummary] = useState(' ');\n  const [value, setValue] = useState(null);\n  const [showFavBtn, setshowFavBtn] = useState(false)\n  const [artistAwardsTotal, setartistAwardsTotal] = useState(null)\n\n  const handleArtistSelection = (artist) => {\n    setValue(artist);\n    setArtist(artist);\n    getArtistSummary(artist);\n    setshowFavBtn(true);\n    let currArtistAwardsArr = [];\n\n    let grammyCount = getArtistCount(grammysJSON, artist);\n    setgrammysCountArtist(grammyCount);\n    if (grammyCount > 0) {currArtistAwardsArr.push({show: 'Grammy', num: grammyCount})}\n\n    let mtvCount = getArtistCount(mtvJSON, artist);\n    setmtvCountArtist(mtvCount);\n    if (mtvCount > 0) {currArtistAwardsArr.push({show: 'MTV VMA', num: mtvCount})}\n\n    let billboardCount = getArtistCount(billboardJSON, artist);\n    setbillboardCountArtist(billboardCount);\n    if (billboardCount > 0) {currArtistAwardsArr.push({show: 'Billboard Music Award', num: billboardCount})}\n\n    let amaCount = getArtistCount(amaJSON, artist);\n    setamaCountArtist(amaCount);\n    if (amaCount > 0) {currArtistAwardsArr.push({show: 'AMA', num: amaCount})}\n\n    let superbowlCount = getArtistCount(superbowlJSON, artist);\n    setsuperbowlCountArtist(superbowlCount);\n    if (superbowlCount > 0) {currArtistAwardsArr.push({show: 'headlined the Super Bowl halftime show', num: superbowlCount})}\n\n    let currArtistAwards = '';\n    for (let key of currArtistAwardsArr) {\n      if (key.show == 'headlined the Super Bowl halftime show') {\n        let endingText;\n        key.num > 1 ? endingText = ' times, ' : endingText = ' time, ';\n        currArtistAwards = currArtistAwards + key.show + ' ' + key.num + endingText;\n      } else {\n        let endingText;\n        key.num > 1 ? endingText = 's, ' : endingText = ', ';\n        currArtistAwards = currArtistAwards + key.num + ' ' + key.show + endingText;\n      }\n    }\n    currArtistAwards = currArtistAwards.substring(0, currArtistAwards.length - 2);\n\n    setartistAwardsTotal(currArtistAwards);\n  }\n\n  const lastfm = {\n    api_key: 'a36b582801c6e46141b9896f2b65b1c4'\n  }\n\n  function getArtistSummary(artist) {\n    artist = artist.replace(/’/g, '%27');\n    artist = artist.replace(/&/g, '%26');\n    const url = `http://ws.audioscrobbler.com/2.0/?method=artist.getinfo&artist=${artist}&api_key=${lastfm.api_key}&format=json`;\n    fetch(url)\n      .then((response) => {\n        return response.json();\n      }).then((data) => {\n        let summary = data.artist.bio.summary;\n        if (artistsFixSummary.includes(artist)) {\n          summary = fixArtistSummary(artist, summary);\n        }\n        setartistSummary(summary);\n      });\n  }\n\n  const handleFavArtist = (add, theartist) => {\n    let currFavs = favs;\n    if (!favs.includes(theartist) && add) {\n      currFavs.push(theartist);\n      setFavs([...currFavs]);\n    } else if (favs.includes(theartist)) {\n      let index = currFavs.indexOf(theartist);\n      currFavs.splice(index, 1);\n      setFavs([...currFavs]);\n    }\n  }\n\n  const pickedFavs = () => {\n    if (favs.length) {\n      let favsArr = favs.map((item, index)=>{\n        return <Favs artist={item} artistSelection={handleArtistSelection} handleAristRemove={handleFavArtist}></Favs>\n      });\n      return favsArr;\n    } else {\n      return <span>There are currently no favorite artists in your list.</span>;\n    }\n  }\n\n  const artistAwardText = () => {\n    if (artist === 'none') {\n      return <h3>Pick an artist to see their award(s)</h3>\n    } else {\n      return <div><h3>Awards for {artist}</h3><p>({artistAwardsTotal})</p></div>\n    }\n  }\n\n  const artistSummaryText = () => {\n    if (artist === 'none') {\n      return 'Pick an artist to read more about them';\n    } else {\n      return artist;\n    }\n  }\n\n  const chartsConfig = [\n    {\n      data: grammysJSON,\n      awards: grammysAwards,\n      awardCountForArist: grammysCountArtist,\n      id: 'grammy',\n      height: 130,\n      show: 'Grammys'\n    },\n    {\n      data: mtvJSON,\n      awards: mtvAwards,\n      awardCountForArist: mtvCountArtist,\n      id: 'mtv',\n      height: 170,\n      show: 'MTV Video Music Awards'\n    },\n    {\n      data: billboardJSON,\n      awards: billboardAwards,\n      awardCountForArist: billboardCountArtist,\n      id: 'billboard',\n      height: 170,\n      show: 'Billboard Music Awards'\n    },\n    {\n      data: amaJSON,\n      awards: amaAwards,\n      awardCountForArist: amaCountArtist,\n      id: 'ama',\n      height: 120,\n      show: 'American Music Awards'\n    },\n    {\n      data: superbowlJSON,\n      awards: superBowlAwards,\n      awardCountForArist: superbowlCountArtist,\n      id: 'superbowl',\n      height: 60,\n      show: 'Super Bowl Halftime Show Headliner'\n    }\n  ];\n\n  const charts = chartsConfig.map((item, index)=>{\n    if (item.awardCountForArist > 0) {\n      return <Chart data={item.data} awards={item.awards} awardCountForArist={item.awardCountForArist} id={item.id} height={item.height} show={item.show} artist={artist} />\n    }\n  });\n\n  const FavBtn = () => (\n    <button className='btn btn-light' onClick={() => {handleFavArtist(true, artist)}}>❤️</button>\n  );\n\n  return (\n    <div className=\"App container\">\n      <h1>Explore Music Award Show Winners</h1>\n      <span>Pick an Artist:</span>\n      <Artists options={artistOptions} onArtistChange={handleArtistSelection} placeholder={'Artists'} value={value}/>\n      <div class=\"row\">\n        <div class=\"col-sm-8\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              About this artist\n            </div>\n            <div class=\"card-body\">\n              <h5 class=\"card-title\">{artistSummaryText()}{ showFavBtn ? <FavBtn /> : null }</h5>\n              <p class=\"card-text\"><Markup content={artistSummary}/></p>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-sm-4\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              My Favorite Artists\n            </div>\n            <div class=\"card-body\">\n              {pickedFavs()}\n            </div>\n            <div></div>\n            <p>Choose an artist. Then select the ❤️ icon to 'bookmark' that artist. Click X to remove them from the list.</p>\n          </div>\n        </div>\n      </div>\n      {artistAwardText()}\n      {charts}\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}