{"ast":null,"code":"var _jsxFileName = \"/Users/reneelightner/reneelempert/react-development-course-materials/final/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Chart from './Chart.js';\nimport { useState, useEffect } from 'react';\nimport Artists from './Artists.js';\nimport Favs from './Favs.js';\nimport mtvCSV from './data/mtv.csv';\nimport grammysJSON from './data/dataGrammys.json'; // create array of unique artist names\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst artistArray = [...new Set(grammysJSON.map(item => item.ART - 1))];\nconsole.log(artistArray);\ngrammysJSON.forEach(function (award) {\n  if (!artistArray.includes(award.ART - 2)) {\n    return award.ART - 2;\n  }\n}); // make array of objects - each obj an artist (used for drop down options)\n\nconst artistOptions = artistArray.map(artist => {\n  return {\n    text: artist,\n    value: artist\n  };\n}); // App component\n\nexport default function App() {\n  _s();\n\n  const [artist, setArtist] = useState('');\n  const [favs, setFavs] = useState(['Bruno Mars']);\n  const [grammysData, setgrammysData] = useState([...grammysJSON]);\n  const [mtvData, setMtvData] = useState([]);\n\n  const handleArtistChange = artist => {\n    setArtist(artist);\n  };\n\n  const handleFavArtist = () => {\n    let currFavs = favs;\n\n    if (!favs.includes(artist)) {\n      currFavs.push(artist);\n      setFavs([...currFavs]);\n    }\n  };\n\n  const pickedFavs = favs.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(Favs, {\n      artist: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Final Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Awards for \", artist]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFavArtist,\n      children: \"\\u2764\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Artists, {\n      options: artistOptions,\n      onArtistChange: handleArtistChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Favorite artists:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), pickedFavs, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"click to remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      data: grammysData,\n      height: 150,\n      width: 960,\n      show: \"Grammys\",\n      artist: artist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"0bn00izT1fCp4nc75hFDtWZVtJM=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/reneelightner/reneelempert/react-development-course-materials/final/src/App.js"],"names":["Chart","useState","useEffect","Artists","Favs","mtvCSV","grammysJSON","artistArray","Set","map","item","ART","console","log","forEach","award","includes","artistOptions","artist","text","value","App","setArtist","favs","setFavs","grammysData","setgrammysData","mtvData","setMtvData","handleArtistChange","handleFavArtist","currFavs","push","pickedFavs","index"],"mappings":"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","sourcesContent":["import './App.css';\nimport Chart from './Chart.js';\nimport {useState, useEffect} from 'react';\nimport Artists from './Artists.js';\nimport Favs from './Favs.js';\nimport mtvCSV from './data/mtv.csv'\nimport grammysJSON from './data/dataGrammys.json';\n\n// create array of unique artist names\nconst artistArray = [...new Set(grammysJSON.map(item => item.ART-1))]; \nconsole.log(artistArray);\ngrammysJSON.forEach(function (award) {\n\tif (!artistArray.includes(award.ART-2)) {return award.ART-2}\n}); \n\n// make array of objects - each obj an artist (used for drop down options)\nconst artistOptions = artistArray.map((artist) => { return {text: artist, value: artist} });\n\n// App component\nexport default function App() {\n  const [artist, setArtist] = useState('');\n  const [favs, setFavs] = useState(['Bruno Mars']);\n  const [grammysData, setgrammysData] = useState([...grammysJSON]);\n  const [mtvData, setMtvData] = useState([]);\n\n  const handleArtistChange = (artist) => {\n    setArtist(artist);\n  }\n\n  const handleFavArtist = () => {\n    let currFavs = favs;\n    if (!favs.includes(artist)) {\n      currFavs.push(artist);\n      setFavs([...currFavs]);\n    }\n  }\n\n  const pickedFavs = favs.map((item, index)=>{\n    return <Favs artist={item}></Favs>\n  })\n\n  return (\n    <div className=\"App\">\n      <h1>Final Project</h1>\n      <h2>Awards for {artist}</h2>\n      <button onClick={handleFavArtist}>❤️</button>\n      <Artists options={artistOptions} onArtistChange={handleArtistChange}/>\n      <div className=\"App\">\n        <span>Favorite artists:</span> \n        {pickedFavs}\n        <p><span><i>click to remove</i></span></p>\n      </div>\n      <Chart data={grammysData} height={150} width={960} show={\"Grammys\"} artist={artist} />\n      {/* <Chart data={mtvData} height={150} width={960} show={\"MTV\"} artist={artist} /> */}\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}