{"ast":null,"code":"var _jsxFileName = \"/Users/reneelightner/Desktop/final/src/App.js\";\nimport './App.css';\nimport Chart from './Chart.js';\nimport Artists from './ArtistsDropdown.js';\nimport Favs from './Favs.js';\nimport ArtistCardFooter from './ArtistCardFooter';\nimport ReadMoreBtn from './ReadMoreBtn';\nimport FavBtn from './FavBtn';\nimport fixArtistSummary from './fixArtistSummary.js'; // data\n\nimport grammysJSON from './data/dataGrammys.json';\nimport mtvJSON from './data/dataMTV.json';\nimport billboardJSON from './data/dataBillboard.json';\nimport amaJSON from './data/dataAMA.json';\nimport superbowlJSON from './data/dataSuperBowl.json'; // award names for each award show\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst grammysAwards = [...new Set(grammysJSON.map(item => item['AWARD']))];\nconst mtvAwards = [...new Set(mtvJSON.map(item => item['AWARD']))];\nconst billboardAwards = [...new Set(billboardJSON.map(item => item['AWARD']))];\nconst amaAwards = [...new Set(amaJSON.map(item => item['AWARD']))];\nconst superBowlAwards = [...new Set(superbowlJSON.map(item => item['AWARD']))]; // get artist names for drop down:\n// create array of unique artist names\n\nlet artistArray = [...new Set(grammysJSON.map(item => item['ART-1']))];\ngrammysJSON.forEach(function (award) {\n  if (!artistArray.includes(award['ART-2'])) {\n    artistArray.push(award['ART-2']);\n  }\n\n  if (!artistArray.includes(award['ART-3'])) {\n    artistArray.push(award['ART-3']);\n  }\n});\nmtvJSON.forEach(function (award) {\n  if (!artistArray.includes(award['ART-1'])) {\n    artistArray.push(award['ART-1']);\n  }\n\n  if (!artistArray.includes(award['ART-2'])) {\n    artistArray.push(award['ART-2']);\n  }\n\n  if (!artistArray.includes(award['ART-3'])) {\n    artistArray.push(award['ART-3']);\n  }\n});\nbillboardJSON.forEach(function (award) {\n  if (!artistArray.includes(award['ART-1'])) {\n    artistArray.push(award['ART-1']);\n  }\n\n  if (!artistArray.includes(award['ART-2'])) {\n    artistArray.push(award['ART-2']);\n  }\n\n  if (!artistArray.includes(award['ART-3'])) {\n    artistArray.push(award['ART-3']);\n  }\n});\namaJSON.forEach(function (award) {\n  if (!artistArray.includes(award['ART-1'])) {\n    artistArray.push(award['ART-1']);\n  }\n});\nsuperbowlJSON.forEach(function (award) {\n  if (!artistArray.includes(award['ART-1'])) {\n    artistArray.push(award['ART-1']);\n  }\n\n  if (!artistArray.includes(award['ART-2'])) {\n    artistArray.push(award['ART-2']);\n  }\n\n  if (!artistArray.includes(award['ART-3'])) {\n    artistArray.push(award['ART-3']);\n  }\n\n  if (!artistArray.includes(award['ART-4'])) {\n    artistArray.push(award['ART-4']);\n  }\n\n  if (!artistArray.includes(award['ART-5'])) {\n    artistArray.push(award['ART-5']);\n  }\n\n  if (!artistArray.includes(award['ART-6'])) {\n    artistArray.push(award['ART-6']);\n  }\n}); // filter out any empty artists\n\nartistArray = artistArray.filter(item => {\n  return item !== \"\";\n}); // sort artist array in alpa order\n\nartistArray = artistArray.sort(); // make array of objects - each obj is an artist (used for drop down options)\n\nconst artistOptions = artistArray.map(artist => {\n  return {\n    text: artist,\n    value: artist\n  };\n}); // used in handleArtistSelection\n\nfunction getArtistCount(data, artist) {\n  let count = 0;\n\n  for (let k of data) {\n    if (k['ART-1'] == artist) {\n      count++;\n    }\n\n    if (k['ART-2'] == artist) {\n      count++;\n    }\n\n    if (k['ART-3'] == artist) {\n      count++;\n    }\n\n    if (k['ART-4'] == artist) {\n      count++;\n    }\n\n    if (k['ART-5'] == artist) {\n      count++;\n    }\n\n    if (k['ART-6'] == artist) {\n      count++;\n    }\n  }\n\n  ;\n  return count;\n} // multiple artist with this name on last fm so we need to fix summary\n\n\nconst artistsFixSummary = ['Chris Brown', 'Creed', 'Eve', 'John Mayer', 'Next', 'Nirvana', 'Roger Miller', 'The Cars', 'Zayn']; //App component\n\nexport default function App(props) {\n  const handleArtistSelection = artist => {\n    props.setValue(artist);\n    props.setArtist(artist);\n    getArtistSummary(artist);\n    props.setpickedArtist(true);\n    let currArtistAwardsArr = [];\n    let grammyCount = getArtistCount(grammysJSON, artist);\n    props.setgrammysCountArtist(grammyCount);\n\n    if (grammyCount > 0) {\n      currArtistAwardsArr.push({\n        show: 'Grammy',\n        num: grammyCount\n      });\n    }\n\n    let mtvCount = getArtistCount(mtvJSON, artist);\n    props.setmtvCountArtist(mtvCount);\n\n    if (mtvCount > 0) {\n      currArtistAwardsArr.push({\n        show: 'MTV VMA',\n        num: mtvCount\n      });\n    }\n\n    let billboardCount = getArtistCount(billboardJSON, artist);\n    props.setbillboardCountArtist(billboardCount);\n\n    if (billboardCount > 0) {\n      currArtistAwardsArr.push({\n        show: 'Billboard Music Award',\n        num: billboardCount\n      });\n    }\n\n    let amaCount = getArtistCount(amaJSON, artist);\n    props.setamaCountArtist(amaCount);\n\n    if (amaCount > 0) {\n      currArtistAwardsArr.push({\n        show: 'AMA',\n        num: amaCount\n      });\n    }\n\n    let superbowlCount = getArtistCount(superbowlJSON, artist);\n    props.setsuperbowlCountArtist(superbowlCount);\n\n    if (superbowlCount > 0) {\n      currArtistAwardsArr.push({\n        show: 'headlined the Super Bowl halftime show',\n        num: superbowlCount\n      });\n    }\n\n    let currArtistAwards = '';\n\n    for (let key of currArtistAwardsArr) {\n      if (key.show == 'headlined the Super Bowl halftime show') {\n        let endingText;\n        key.num > 1 ? endingText = ' times, ' : endingText = ' time, ';\n        currArtistAwards = currArtistAwards + key.show + ' ' + key.num + endingText;\n      } else {\n        let endingText;\n        key.num > 1 ? endingText = 's, ' : endingText = ', ';\n        currArtistAwards = currArtistAwards + key.num + ' ' + key.show + endingText;\n      }\n    }\n\n    currArtistAwards = currArtistAwards.substring(0, currArtistAwards.length - 2);\n    props.setartistAwardsTotal(currArtistAwards);\n  };\n\n  function getArtistSummary(artist) {\n    artist = artist.replace(/’/g, '%27');\n    artist = artist.replace(/&/g, '%26');\n    const url = `http://ws.audioscrobbler.com/2.0/?method=artist.getinfo&artist=${artist}&api_key=${process.env.REACT_APP_LASTFM_API_KEY}&format=json`;\n    fetch(url).then(response => {\n      return response.json();\n    }).then(data => {\n      let summary = data.artist.bio.summary;\n\n      if (artistsFixSummary.includes(props.artist)) {\n        summary = fixArtistSummary(artist, summary);\n      }\n\n      summary = summary.split('<a href=\"');\n      props.setartistSummary(summary[0]);\n      props.setartistURL(data.artist.url);\n    });\n  }\n\n  const handleFavArtist = (add, theartist) => {\n    let currFavs = props.favs;\n\n    if (!props.favs.includes(theartist) && add) {\n      currFavs.push(theartist);\n      props.setFavs([...currFavs]);\n    } else if (props.favs.includes(theartist)) {\n      let index = currFavs.indexOf(theartist);\n      currFavs.splice(index, 1);\n      props.setFavs([...currFavs]);\n    }\n  };\n\n  const pickedFavs = () => {\n    if (props.favs.length) {\n      let favsArr = props.favs.map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(Favs, {\n          artist: item,\n          artistSelection: handleArtistSelection,\n          handleAristRemove: handleFavArtist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 16\n        }, this);\n      });\n      return favsArr;\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"card-text\",\n        children: \"There're no favorite artists in your list.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 14\n      }, this);\n    }\n  };\n\n  const artistAwardText = () => {\n    if (props.artist === 'none') {\n      return `Pick an artist to see their award(s)`;\n    } else {\n      return `${props.artist}: ${props.artistAwardsTotal}`;\n    }\n  };\n\n  const artistSummaryText = () => {\n    if (props.artist === 'none') {\n      return 'Pick an artist to read more about them';\n    } else {\n      return props.artist;\n    }\n  };\n\n  const chartsConfig = [{\n    data: grammysJSON,\n    awards: grammysAwards,\n    awardCountForArist: props.grammysCountArtist,\n    id: 'grammy',\n    height: 130,\n    show: 'Grammys'\n  }, {\n    data: mtvJSON,\n    awards: mtvAwards,\n    awardCountForArist: props.mtvCountArtist,\n    id: 'mtv',\n    height: 170,\n    show: 'MTV Video Music Awards'\n  }, {\n    data: billboardJSON,\n    awards: billboardAwards,\n    awardCountForArist: props.billboardCountArtist,\n    id: 'billboard',\n    height: 170,\n    show: 'Billboard Music Awards'\n  }, {\n    data: amaJSON,\n    awards: amaAwards,\n    awardCountForArist: props.amaCountArtist,\n    id: 'ama',\n    height: 120,\n    show: 'American Music Awards'\n  }, {\n    data: superbowlJSON,\n    awards: superBowlAwards,\n    awardCountForArist: props.superbowlCountArtist,\n    id: 'superbowl',\n    height: 60,\n    show: 'Super Bowl Halftime Show Headliner'\n  }];\n  const charts = chartsConfig.map((item, index) => {\n    if (item.awardCountForArist > 0) {\n      return /*#__PURE__*/_jsxDEV(Chart, {\n        data: item.data,\n        awards: item.awards,\n        awardCountForArist: item.awardCountForArist,\n        id: item.id,\n        height: item.height,\n        show: item.show,\n        artist: props.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 14\n      }, this);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row mt-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-sm-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Music Award Show Winners\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Learn more about famous music artists by seeing their awards! Choose an artist below to see their awards from the: Grammys, MTV Music Awards, Billboard Music Awards, American Music Awards and if they've headlined the Superbowl Halftime Show (not an award show but I'm considering it an honor). \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"Note: only select awards are shown for each show.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 308\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Artists, {\n          options: artistOptions,\n          onArtistChange: handleArtistSelection,\n          placeholder: 'Pick an Artist',\n          value: props.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-sm-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-header\",\n            children: \"About this Artist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              class: \"card-title\",\n              children: artistSummaryText()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              class: \"card-text\",\n              children: props.artistSummary\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), props.pickedArtist ? /*#__PURE__*/_jsxDEV(ReadMoreBtn, {\n              artistURL: props.artistURL\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 38\n            }, this) : null, props.pickedArtist ? /*#__PURE__*/_jsxDEV(FavBtn, {\n              handleFavArtist: handleFavArtist,\n              artist: props.artist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 38\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this), props.pickedArtist ? /*#__PURE__*/_jsxDEV(ArtistCardFooter, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 36\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-sm-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-header\",\n            children: \"My Favorite Artists\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-body\",\n            children: pickedFavs()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-footer text-muted\",\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"Pick an artist. Then select the \\u2764\\uFE0F icon to 'bookmark' that artist. Click X to remove them.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-sm-12\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-header\",\n            children: \"Awards for this Artist\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              class: \"card-title\",\n              children: artistAwardText()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this), charts]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/reneelightner/Desktop/final/src/App.js"],"names":["Chart","Artists","Favs","ArtistCardFooter","ReadMoreBtn","FavBtn","fixArtistSummary","grammysJSON","mtvJSON","billboardJSON","amaJSON","superbowlJSON","grammysAwards","Set","map","item","mtvAwards","billboardAwards","amaAwards","superBowlAwards","artistArray","forEach","award","includes","push","filter","sort","artistOptions","artist","text","value","getArtistCount","data","count","k","artistsFixSummary","App","props","handleArtistSelection","setValue","setArtist","getArtistSummary","setpickedArtist","currArtistAwardsArr","grammyCount","setgrammysCountArtist","show","num","mtvCount","setmtvCountArtist","billboardCount","setbillboardCountArtist","amaCount","setamaCountArtist","superbowlCount","setsuperbowlCountArtist","currArtistAwards","key","endingText","substring","length","setartistAwardsTotal","replace","url","process","env","REACT_APP_LASTFM_API_KEY","fetch","then","response","json","summary","bio","split","setartistSummary","setartistURL","handleFavArtist","add","theartist","currFavs","favs","setFavs","index","indexOf","splice","pickedFavs","favsArr","artistAwardText","artistAwardsTotal","artistSummaryText","chartsConfig","awards","awardCountForArist","grammysCountArtist","id","height","mtvCountArtist","billboardCountArtist","amaCountArtist","superbowlCountArtist","charts","artistSummary","pickedArtist","artistURL"],"mappings":"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","sourcesContent":["import './App.css';\n\nimport Chart from './Chart.js';\nimport Artists from './ArtistsDropdown.js';\nimport Favs from './Favs.js';\nimport ArtistCardFooter from './ArtistCardFooter';\nimport ReadMoreBtn from './ReadMoreBtn';\nimport FavBtn from './FavBtn';\n\nimport fixArtistSummary from './fixArtistSummary.js';\n\n// data\nimport grammysJSON from './data/dataGrammys.json';\nimport mtvJSON from './data/dataMTV.json';\nimport billboardJSON from './data/dataBillboard.json';\nimport amaJSON from './data/dataAMA.json';\nimport superbowlJSON from './data/dataSuperBowl.json';\n\n// award names for each award show\nconst grammysAwards = [...new Set(grammysJSON.map(item => item['AWARD']))];\nconst mtvAwards = [...new Set(mtvJSON.map(item => item['AWARD']))];\nconst billboardAwards = [...new Set(billboardJSON.map(item => item['AWARD']))];\nconst amaAwards = [...new Set(amaJSON.map(item => item['AWARD']))];\nconst superBowlAwards = [...new Set(superbowlJSON.map(item => item['AWARD']))];\n\n// get artist names for drop down:\n// create array of unique artist names\nlet artistArray = [...new Set(grammysJSON.map(item => item['ART-1']))];\ngrammysJSON.forEach(function (award) {\n\tif (!artistArray.includes(award['ART-2'])) {artistArray.push(award['ART-2'])}\n  if (!artistArray.includes(award['ART-3'])) {artistArray.push(award['ART-3'])}\n}); \nmtvJSON.forEach(function (award) {\n\tif (!artistArray.includes(award['ART-1'])) {artistArray.push(award['ART-1'])}\n  if (!artistArray.includes(award['ART-2'])) {artistArray.push(award['ART-2'])}\n  if (!artistArray.includes(award['ART-3'])) {artistArray.push(award['ART-3'])}\n});\nbillboardJSON.forEach(function (award) {\n\tif (!artistArray.includes(award['ART-1'])) {artistArray.push(award['ART-1'])}\n  if (!artistArray.includes(award['ART-2'])) {artistArray.push(award['ART-2'])}\n  if (!artistArray.includes(award['ART-3'])) {artistArray.push(award['ART-3'])}\n});\namaJSON.forEach(function (award) {\n\tif (!artistArray.includes(award['ART-1'])) {artistArray.push(award['ART-1'])}\n});\nsuperbowlJSON.forEach(function (award) {\n\tif (!artistArray.includes(award['ART-1'])) {artistArray.push(award['ART-1'])}\n  if (!artistArray.includes(award['ART-2'])) {artistArray.push(award['ART-2'])}\n  if (!artistArray.includes(award['ART-3'])) {artistArray.push(award['ART-3'])}\n  if (!artistArray.includes(award['ART-4'])) {artistArray.push(award['ART-4'])}\n  if (!artistArray.includes(award['ART-5'])) {artistArray.push(award['ART-5'])}\n  if (!artistArray.includes(award['ART-6'])) {artistArray.push(award['ART-6'])}\n});\n// filter out any empty artists\nartistArray = artistArray.filter(item => {\n  return item !== \"\"\n})\n// sort artist array in alpa order\nartistArray = artistArray.sort();\n// make array of objects - each obj is an artist (used for drop down options)\nconst artistOptions = artistArray.map((artist) => { return {text: artist, value: artist} });\n\n// used in handleArtistSelection\nfunction getArtistCount(data, artist) {\n  let count = 0;\n  for (let k of data) {\n    if (k['ART-1'] == artist) { count++; }\n    if (k['ART-2'] == artist) { count++; }\n    if (k['ART-3'] == artist) { count++; }\n    if (k['ART-4'] == artist) { count++; }\n    if (k['ART-5'] == artist) { count++; }\n    if (k['ART-6'] == artist) { count++; }\n  };\n  return count;\n}\n\n// multiple artist with this name on last fm so we need to fix summary\nconst artistsFixSummary = ['Chris Brown', 'Creed', 'Eve', 'John Mayer', 'Next', 'Nirvana', 'Roger Miller', 'The Cars', 'Zayn'];\n\n//App component\nexport default function App(props) {\n\n  const handleArtistSelection = (artist) => {\n    props.setValue(artist);\n    props.setArtist(artist);\n    getArtistSummary(artist);\n    props.setpickedArtist(true);\n    let currArtistAwardsArr = [];\n\n    let grammyCount = getArtistCount(grammysJSON, artist);\n    props.setgrammysCountArtist(grammyCount);\n    if (grammyCount > 0) {currArtistAwardsArr.push({show: 'Grammy', num: grammyCount})}\n\n    let mtvCount = getArtistCount(mtvJSON, artist);\n    props.setmtvCountArtist(mtvCount);\n    if (mtvCount > 0) {currArtistAwardsArr.push({show: 'MTV VMA', num: mtvCount})}\n\n    let billboardCount = getArtistCount(billboardJSON, artist);\n    props.setbillboardCountArtist(billboardCount);\n    if (billboardCount > 0) {currArtistAwardsArr.push({show: 'Billboard Music Award', num: billboardCount})}\n\n    let amaCount = getArtistCount(amaJSON, artist);\n    props.setamaCountArtist(amaCount);\n    if (amaCount > 0) {currArtistAwardsArr.push({show: 'AMA', num: amaCount})}\n\n    let superbowlCount = getArtistCount(superbowlJSON, artist);\n    props.setsuperbowlCountArtist(superbowlCount);\n    if (superbowlCount > 0) {currArtistAwardsArr.push({show: 'headlined the Super Bowl halftime show', num: superbowlCount})}\n\n    let currArtistAwards = '';\n    for (let key of currArtistAwardsArr) {\n      if (key.show == 'headlined the Super Bowl halftime show') {\n        let endingText;\n        key.num > 1 ? endingText = ' times, ' : endingText = ' time, ';\n        currArtistAwards = currArtistAwards + key.show + ' ' + key.num + endingText;\n      } else {\n        let endingText;\n        key.num > 1 ? endingText = 's, ' : endingText = ', ';\n        currArtistAwards = currArtistAwards + key.num + ' ' + key.show + endingText;\n      }\n    }\n    currArtistAwards = currArtistAwards.substring(0, currArtistAwards.length - 2);\n\n    props.setartistAwardsTotal(currArtistAwards);\n  }\n\n  function getArtistSummary(artist) {\n    artist = artist.replace(/’/g, '%27');\n    artist = artist.replace(/&/g, '%26');\n    const url = `http://ws.audioscrobbler.com/2.0/?method=artist.getinfo&artist=${artist}&api_key=${process.env.REACT_APP_LASTFM_API_KEY}&format=json`;\n    fetch(url)\n      .then((response) => {\n        return response.json();\n      }).then((data) => {\n        let summary = data.artist.bio.summary;\n        if (artistsFixSummary.includes(props.artist)) {\n          summary = fixArtistSummary(artist, summary);\n        }\n        summary = summary.split('<a href=\"');\n        props.setartistSummary(summary[0]);\n        props.setartistURL(data.artist.url);\n      });\n  }\n\n  const handleFavArtist = (add, theartist) => {\n    let currFavs = props.favs;\n    if (!props.favs.includes(theartist) && add) {\n      currFavs.push(theartist);\n      props.setFavs([...currFavs]);\n    } else if (props.favs.includes(theartist)) {\n      let index = currFavs.indexOf(theartist);\n      currFavs.splice(index, 1);\n      props.setFavs([...currFavs]);\n    }\n  }\n\n  const pickedFavs = () => {\n    if (props.favs.length) {\n      let favsArr = props.favs.map((item, index)=>{\n        return <Favs artist={item} artistSelection={handleArtistSelection} handleAristRemove={handleFavArtist}></Favs>\n      });\n      return favsArr;\n    } else {\n      return <p class=\"card-text\">There're no favorite artists in your list.</p>;\n    }\n  }\n\n  const artistAwardText = () => {\n    if (props.artist === 'none') {\n      return `Pick an artist to see their award(s)`\n    } else {\n      return `${props.artist}: ${props.artistAwardsTotal}`\n    }\n  }\n\n  const artistSummaryText = () => {\n    if (props.artist === 'none') {\n      return 'Pick an artist to read more about them';\n    } else {\n      return props.artist;\n    }\n  }\n\n  const chartsConfig = [\n    {\n      data: grammysJSON,\n      awards: grammysAwards,\n      awardCountForArist: props.grammysCountArtist,\n      id: 'grammy',\n      height: 130,\n      show: 'Grammys'\n    },\n    {\n      data: mtvJSON,\n      awards: mtvAwards,\n      awardCountForArist: props.mtvCountArtist,\n      id: 'mtv',\n      height: 170,\n      show: 'MTV Video Music Awards'\n    },\n    {\n      data: billboardJSON,\n      awards: billboardAwards,\n      awardCountForArist: props.billboardCountArtist,\n      id: 'billboard',\n      height: 170,\n      show: 'Billboard Music Awards'\n    },\n    {\n      data: amaJSON,\n      awards: amaAwards,\n      awardCountForArist: props.amaCountArtist,\n      id: 'ama',\n      height: 120,\n      show: 'American Music Awards'\n    },\n    {\n      data: superbowlJSON,\n      awards: superBowlAwards,\n      awardCountForArist: props.superbowlCountArtist,\n      id: 'superbowl',\n      height: 60,\n      show: 'Super Bowl Halftime Show Headliner'\n    }\n  ];\n\n  const charts = chartsConfig.map((item, index)=>{\n    if (item.awardCountForArist > 0) {\n      return <Chart data={item.data} awards={item.awards} awardCountForArist={item.awardCountForArist} id={item.id} height={item.height} show={item.show} artist={props.artist} />\n    }\n  });\n\n  return (\n    <div className=\"container\">\n      <div class=\"row mt-3\">\n        <div class=\"col-sm-6\">\n          <h1>Music Award Show Winners</h1>\n          <p>Learn more about famous music artists by seeing their awards! Choose an artist below to see their awards from the: Grammys, MTV Music Awards, Billboard Music Awards, American Music Awards and if they've headlined the Superbowl Halftime Show (not an award show but I'm considering it an honor). <i>Note: only select awards are shown for each show.</i></p>\n          <Artists options={artistOptions} onArtistChange={handleArtistSelection} placeholder={'Pick an Artist'} value={props.value}/>\n        </div>\n      </div>\n      <div class=\"row mt-5\">\n        <div class=\"col-sm-8\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              About this Artist\n            </div>\n            <div class=\"card-body\">\n              <h5 class=\"card-title\">{artistSummaryText()}</h5>\n              <p class=\"card-text\">{props.artistSummary}</p>\n              { props.pickedArtist ? <ReadMoreBtn artistURL={props.artistURL} /> : null }\n              { props.pickedArtist ? <FavBtn handleFavArtist={handleFavArtist} artist={props.artist} /> : null }\n            </div>\n            { props.pickedArtist ? <ArtistCardFooter /> : null }\n          </div>\n        </div>\n        <div class=\"col-sm-4\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              My Favorite Artists\n            </div>\n            <div class=\"card-body\">\n              {pickedFavs()}\n            </div>\n            <div class=\"card-footer text-muted\">\n              <small>Pick an artist. Then select the ❤️ icon to 'bookmark' that artist. Click X to remove them.</small>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"row mt-5\">\n        <div class=\"col-sm-12\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              Awards for this Artist\n            </div>\n            <div class=\"card-body\">\n              <h5 class=\"card-title\">{artistAwardText()}</h5>\n              {charts}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}