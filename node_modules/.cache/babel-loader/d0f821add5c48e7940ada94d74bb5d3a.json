{"ast":null,"code":"var _jsxFileName = \"/Users/reneelightner/reneelempert/react-development-course-materials/final/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Chart from './Chart.js';\nimport { useState, useEffect } from 'react';\nimport Artists from './Artists.js';\nimport Favs from './Favs.js';\nimport grammysJSON from './data/dataGrammys.json';\nimport mtvJSON from './data/dataMTV.json'; // award names for each award show\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst grammysAwards = [...new Set(grammysJSON.map(item => item['AWARD']))];\nconst mtvAwards = [...new Set(mtvJSON.map(item => item['AWARD']))]; // get artist names for drop down:\n// create array of unique artist names\n\nlet artistArray = [...new Set(grammysJSON.map(item => item['ART-1']))];\ngrammysJSON.forEach(function (award) {\n  if (!artistArray.includes(award['ART-2'])) {\n    artistArray.push(award['ART-2']);\n  }\n\n  if (!artistArray.includes(award['ART-3'])) {\n    artistArray.push(award['ART-3']);\n  }\n});\nmtvJSON.forEach(function (award) {\n  if (!artistArray.includes(award['ART-1'])) {\n    artistArray.push(award['ART-1']);\n  }\n\n  if (!artistArray.includes(award['ART-2'])) {\n    artistArray.push(award['ART-2']);\n  }\n}); // filter out any empty artists\n\nartistArray = artistArray.filter(item => {\n  return item !== \"\";\n}); // sort artist array in alpa order\n\nartistArray = artistArray.sort(); // make array of objects - each obj is an artist (used for drop down options)\n\nconst artistOptions = artistArray.map(artist => {\n  return {\n    text: artist,\n    value: artist\n  };\n}); // App component\n\nexport default function App() {\n  _s();\n\n  const [artist, setArtist] = useState('none');\n  const [favs, setFavs] = useState(['Bruno Mars']);\n  const [grammysData, setgrammysData] = useState([...grammysJSON]);\n  const [mtvData, setMtvData] = useState([...mtvJSON]);\n\n  const handleArtistSelection = artist => {\n    setArtist(artist);\n  };\n\n  const handleFavArtist = add => {\n    console.log('here here');\n    let currFavs = favs;\n\n    if (!favs.includes(artist) && add) {\n      currFavs.push(artist);\n      setFavs([...currFavs]);\n    } else if (favs.includes(artist)) {\n      console.log('here');\n      let index = currFavs.indexOf(artist);\n      currFavs.splice(index, 1);\n      setFavs([...currFavs]);\n    }\n  };\n\n  const pickedFavs = favs.map((item, index) => {\n    return /*#__PURE__*/_jsxDEV(Favs, {\n      artist: item,\n      artistSelection: handleArtistSelection,\n      handleAristRemove: handleFavArtist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 12\n    }, this);\n  });\n\n  const artistText = () => {\n    if (artist === 'none') {\n      return 'Choose an artist to see their awards';\n    } else {\n      return `Awards for ${artist}`;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Final Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: artistText()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        handleFavArtist(true);\n      },\n      children: \"\\u2764\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Artists, {\n      options: artistOptions,\n      onArtistChange: handleArtistSelection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Favorite artists:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), pickedFavs]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      data: grammysData,\n      awards: grammysAwards,\n      id: 'grammy',\n      height: 150,\n      width: 960,\n      show: \"Grammys\",\n      artist: artist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      data: mtvData,\n      awards: mtvAwards,\n      id: 'mtv',\n      height: 150,\n      width: 960,\n      show: \"MTV\",\n      artist: artist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"YOojdWFt5SmHIn/DC/TuPTCZKVo=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/reneelightner/reneelempert/react-development-course-materials/final/src/App.js"],"names":["Chart","useState","useEffect","Artists","Favs","grammysJSON","mtvJSON","grammysAwards","Set","map","item","mtvAwards","artistArray","forEach","award","includes","push","filter","sort","artistOptions","artist","text","value","App","setArtist","favs","setFavs","grammysData","setgrammysData","mtvData","setMtvData","handleArtistSelection","handleFavArtist","add","console","log","currFavs","index","indexOf","splice","pickedFavs","artistText"],"mappings":"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","sourcesContent":["import './App.css';\nimport Chart from './Chart.js';\nimport {useState, useEffect} from 'react';\nimport Artists from './Artists.js';\nimport Favs from './Favs.js';\nimport grammysJSON from './data/dataGrammys.json';\nimport mtvJSON from './data/dataMTV.json';\n\n// award names for each award show\nconst grammysAwards = [...new Set(grammysJSON.map(item => item['AWARD']))];\nconst mtvAwards = [...new Set(mtvJSON.map(item => item['AWARD']))];\n\n// get artist names for drop down:\n// create array of unique artist names\nlet artistArray = [...new Set(grammysJSON.map(item => item['ART-1']))];\ngrammysJSON.forEach(function (award) {\n\tif (!artistArray.includes(award['ART-2'])) {artistArray.push(award['ART-2'])}\n  if (!artistArray.includes(award['ART-3'])) {artistArray.push(award['ART-3'])}\n}); \nmtvJSON.forEach(function (award) {\n\tif (!artistArray.includes(award['ART-1'])) {artistArray.push(award['ART-1'])}\n  if (!artistArray.includes(award['ART-2'])) {artistArray.push(award['ART-2'])}\n});\n// filter out any empty artists\nartistArray = artistArray.filter(item => {\n  return item !== \"\"\n})\n// sort artist array in alpa order\nartistArray = artistArray.sort();\n// make array of objects - each obj is an artist (used for drop down options)\nconst artistOptions = artistArray.map((artist) => { return {text: artist, value: artist} });\n\n// App component\nexport default function App() {\n  const [artist, setArtist] = useState('none');\n  const [favs, setFavs] = useState(['Bruno Mars']);\n  const [grammysData, setgrammysData] = useState([...grammysJSON]);\n  const [mtvData, setMtvData] = useState([...mtvJSON]);\n\n  const handleArtistSelection = (artist) => {\n    setArtist(artist);\n  }\n\n  const handleFavArtist = (add) => {\n    console.log('here here');\n    let currFavs = favs;\n    if (!favs.includes(artist) && add) {\n      currFavs.push(artist);\n      setFavs([...currFavs]);\n    } else if (favs.includes(artist)) {\n      console.log('here');\n      let index = currFavs.indexOf(artist);\n      currFavs.splice(index, 1);\n      setFavs([...currFavs]);\n    }\n  }\n\n  const pickedFavs = favs.map((item, index)=>{\n    return <Favs artist={item} artistSelection={handleArtistSelection} handleAristRemove={handleFavArtist}></Favs>\n  })\n\n  const artistText = () => {\n    if (artist === 'none') {\n      return 'Choose an artist to see their awards';\n    } else {\n      return `Awards for ${artist}`;\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Final Project</h1>\n      <h2>{artistText()}</h2>\n      <button onClick={() => {handleFavArtist(true)}}>❤️</button>\n      <Artists options={artistOptions} onArtistChange={handleArtistSelection}/>\n      <div className=\"App\">\n        <span>Favorite artists:</span> \n        {pickedFavs}\n      </div>\n      <Chart data={grammysData} awards={grammysAwards} id={'grammy'} height={150} width={960} show={\"Grammys\"} artist={artist} />\n      <Chart data={mtvData} awards={mtvAwards} id={'mtv'} height={150} width={960} show={\"MTV\"} artist={artist} />\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}