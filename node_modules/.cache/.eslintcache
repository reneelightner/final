[{"/Users/reneelightner/Desktop/final/src/index.js":"1","/Users/reneelightner/Desktop/final/src/Links.js":"2","/Users/reneelightner/Desktop/final/src/reportWebVitals.js":"3","/Users/reneelightner/Desktop/final/src/About.js":"4","/Users/reneelightner/Desktop/final/src/Layout.js":"5","/Users/reneelightner/Desktop/final/src/App.js":"6","/Users/reneelightner/Desktop/final/src/Nav.js":"7","/Users/reneelightner/Desktop/final/src/Favs.js":"8","/Users/reneelightner/Desktop/final/src/fixArtistSummary.js":"9","/Users/reneelightner/Desktop/final/src/Chart.js":"10","/Users/reneelightner/Desktop/final/src/useD3.js":"11","/Users/reneelightner/Desktop/final/src/ArtistCardFooter.js":"12","/Users/reneelightner/Desktop/final/src/ReadMoreBtn.js":"13","/Users/reneelightner/Desktop/final/src/FavBtn.js":"14","/Users/reneelightner/Desktop/final/src/ArtistsDropdown.js":"15"},{"size":506,"mtime":1641862978867,"results":"16","hashOfConfig":"17"},{"size":2072,"mtime":1641862912721,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1639861457999,"results":"19","hashOfConfig":"17"},{"size":4156,"mtime":1642358432311,"results":"20","hashOfConfig":"17"},{"size":434,"mtime":1641761827771,"results":"21","hashOfConfig":"17"},{"size":10681,"mtime":1642361991927,"results":"22","hashOfConfig":"17"},{"size":287,"mtime":1641760955136,"results":"23","hashOfConfig":"17"},{"size":493,"mtime":1641755149370,"results":"24","hashOfConfig":"17"},{"size":1311,"mtime":1641664939730,"results":"25","hashOfConfig":"17"},{"size":6485,"mtime":1641761873528,"results":"26","hashOfConfig":"17"},{"size":286,"mtime":1639939828777,"results":"27","hashOfConfig":"17"},{"size":231,"mtime":1642356863368,"results":"28","hashOfConfig":"17"},{"size":183,"mtime":1642357097009,"results":"29","hashOfConfig":"17"},{"size":260,"mtime":1642358549675,"results":"30","hashOfConfig":"17"},{"size":397,"mtime":1642358842495,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hibt7g",{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/reneelightner/Desktop/final/src/index.js",[],"/Users/reneelightner/Desktop/final/src/Links.js",[],"/Users/reneelightner/Desktop/final/src/reportWebVitals.js",[],"/Users/reneelightner/Desktop/final/src/About.js",[],"/Users/reneelightner/Desktop/final/src/Layout.js",[],"/Users/reneelightner/Desktop/final/src/App.js",["66","67","68","69","70","71","72","73"],"import './App.css';\n\nimport Chart from './Chart.js';\nimport ArtistsDropdown from './ArtistsDropdown.js';\nimport Favs from './Favs.js';\nimport ArtistCardFooter from './ArtistCardFooter';\nimport ReadMoreBtn from './ReadMoreBtn';\nimport FavBtn from './FavBtn';\n\nimport fixArtistSummary from './fixArtistSummary.js';\n\n// data\nimport grammysJSON from './data/dataGrammys.json';\nimport mtvJSON from './data/dataMTV.json';\nimport billboardJSON from './data/dataBillboard.json';\nimport amaJSON from './data/dataAMA.json';\nimport superbowlJSON from './data/dataSuperBowl.json';\n\n// award names for each award show\nconst grammysAwards = [...new Set(grammysJSON.map(item => item['AWARD']))];\nconst mtvAwards = [...new Set(mtvJSON.map(item => item['AWARD']))];\nconst billboardAwards = [...new Set(billboardJSON.map(item => item['AWARD']))];\nconst amaAwards = [...new Set(amaJSON.map(item => item['AWARD']))];\nconst superBowlAwards = [...new Set(superbowlJSON.map(item => item['AWARD']))];\n\n// get artist names for drop down:\n// create array of unique artist names\nlet artistArray = [...new Set(grammysJSON.map(item => item['ART-1']))];\ngrammysJSON.forEach(function (award) {\n\tif (!artistArray.includes(award['ART-2'])) {artistArray.push(award['ART-2'])}\n  if (!artistArray.includes(award['ART-3'])) {artistArray.push(award['ART-3'])}\n}); \nmtvJSON.forEach(function (award) {\n\tif (!artistArray.includes(award['ART-1'])) {artistArray.push(award['ART-1'])}\n  if (!artistArray.includes(award['ART-2'])) {artistArray.push(award['ART-2'])}\n  if (!artistArray.includes(award['ART-3'])) {artistArray.push(award['ART-3'])}\n});\nbillboardJSON.forEach(function (award) {\n\tif (!artistArray.includes(award['ART-1'])) {artistArray.push(award['ART-1'])}\n  if (!artistArray.includes(award['ART-2'])) {artistArray.push(award['ART-2'])}\n  if (!artistArray.includes(award['ART-3'])) {artistArray.push(award['ART-3'])}\n});\namaJSON.forEach(function (award) {\n\tif (!artistArray.includes(award['ART-1'])) {artistArray.push(award['ART-1'])}\n});\nsuperbowlJSON.forEach(function (award) {\n\tif (!artistArray.includes(award['ART-1'])) {artistArray.push(award['ART-1'])}\n  if (!artistArray.includes(award['ART-2'])) {artistArray.push(award['ART-2'])}\n  if (!artistArray.includes(award['ART-3'])) {artistArray.push(award['ART-3'])}\n  if (!artistArray.includes(award['ART-4'])) {artistArray.push(award['ART-4'])}\n  if (!artistArray.includes(award['ART-5'])) {artistArray.push(award['ART-5'])}\n  if (!artistArray.includes(award['ART-6'])) {artistArray.push(award['ART-6'])}\n});\n// filter out any empty artists\nartistArray = artistArray.filter(item => {\n  return item !== \"\"\n})\n// sort artist array in alpa order\nartistArray = artistArray.sort();\n// make array of objects - each obj is an artist (used for drop down options)\nconst artistOptions = artistArray.map((artist) => { return {text: artist, value: artist} });\n\n// used in handleArtistSelection\nfunction getArtistCount(data, artist) {\n  let count = 0;\n  for (let k of data) {\n    if (k['ART-1'] == artist) { count++; }\n    if (k['ART-2'] == artist) { count++; }\n    if (k['ART-3'] == artist) { count++; }\n    if (k['ART-4'] == artist) { count++; }\n    if (k['ART-5'] == artist) { count++; }\n    if (k['ART-6'] == artist) { count++; }\n  };\n  return count;\n}\n\n// multiple artist with this name on last fm so we need to fix summary\nconst artistsFixSummary = ['Chris Brown', 'Creed', 'Eve', 'John Mayer', 'Next', 'Nirvana', 'Roger Miller', 'The Cars', 'Zayn'];\n\n//App component\nexport default function App(props) {\n\n  const handleArtistSelection = (artist) => {\n    props.setValue(artist);\n    props.setArtist(artist);\n    getArtistSummary(artist);\n    props.setpickedArtist(true);\n    let currArtistAwardsArr = [];\n\n    let grammyCount = getArtistCount(grammysJSON, artist);\n    props.setgrammysCountArtist(grammyCount);\n    if (grammyCount > 0) {currArtistAwardsArr.push({show: 'Grammy', num: grammyCount})}\n\n    let mtvCount = getArtistCount(mtvJSON, artist);\n    props.setmtvCountArtist(mtvCount);\n    if (mtvCount > 0) {currArtistAwardsArr.push({show: 'MTV VMA', num: mtvCount})}\n\n    let billboardCount = getArtistCount(billboardJSON, artist);\n    props.setbillboardCountArtist(billboardCount);\n    if (billboardCount > 0) {currArtistAwardsArr.push({show: 'Billboard Music Award', num: billboardCount})}\n\n    let amaCount = getArtistCount(amaJSON, artist);\n    props.setamaCountArtist(amaCount);\n    if (amaCount > 0) {currArtistAwardsArr.push({show: 'AMA', num: amaCount})}\n\n    let superbowlCount = getArtistCount(superbowlJSON, artist);\n    props.setsuperbowlCountArtist(superbowlCount);\n    if (superbowlCount > 0) {currArtistAwardsArr.push({show: 'headlined the Super Bowl halftime show', num: superbowlCount})}\n\n    let currArtistAwards = '';\n    for (let key of currArtistAwardsArr) {\n      if (key.show == 'headlined the Super Bowl halftime show') {\n        let endingText;\n        key.num > 1 ? endingText = ' times, ' : endingText = ' time, ';\n        currArtistAwards = currArtistAwards + key.show + ' ' + key.num + endingText;\n      } else {\n        let endingText;\n        key.num > 1 ? endingText = 's, ' : endingText = ', ';\n        currArtistAwards = currArtistAwards + key.num + ' ' + key.show + endingText;\n      }\n    }\n    currArtistAwards = currArtistAwards.substring(0, currArtistAwards.length - 2);\n\n    props.setartistAwardsTotal(currArtistAwards);\n  }\n\n  const getArtistSummary = (artist) => {\n    artist = artist.replace(/’/g, '%27');\n    artist = artist.replace(/&/g, '%26');\n    const url = `https://ws.audioscrobbler.com/2.0/?method=artist.getinfo&artist=${artist}&api_key=${process.env.REACT_APP_LASTFM_API_KEY}&format=json`;\n    fetch(url)\n      .then((response) => {\n        return response.json();\n      }).then((data) => {\n        let summary = data.artist.bio.summary;\n        if (artistsFixSummary.includes(props.artist)) {\n          summary = fixArtistSummary(artist, summary);\n        }\n        summary = summary.split('<a href=\"');\n        props.setartistSummary(summary[0]);\n        props.setartistURL(data.artist.url);\n      });\n  }\n\n  const handleFavArtist = (add, theartist) => {\n    let currFavs = props.favs;\n    if (!props.favs.includes(theartist) && add) {\n      currFavs.push(theartist);\n      props.setFavs([...currFavs]);\n    } else if (props.favs.includes(theartist)) {\n      let index = currFavs.indexOf(theartist);\n      currFavs.splice(index, 1);\n      props.setFavs([...currFavs]);\n    }\n  }\n\n  const pickedFavs = () => {\n    if (props.favs.length) {\n      let favsArr = props.favs.map((item, index)=>{\n        return <Favs artist={item} artistSelection={handleArtistSelection} handleAristRemove={handleFavArtist}></Favs>\n      });\n      return favsArr;\n    } else {\n      return <p class=\"card-text\">There're no favorite artists in your list.</p>;\n    }\n  }\n\n  const artistAwardText = () => {\n    if (props.artist === 'none') {\n      return `Pick an artist to see their award(s)`\n    } else {\n      return `${props.artist}: ${props.artistAwardsTotal}`\n    }\n  }\n\n  const artistSummaryText = () => {\n    if (props.artist === 'none') {\n      return 'Pick an artist to read more about them';\n    } else {\n      return props.artist;\n    }\n  }\n\n  const chartsConfig = [\n    {\n      data: grammysJSON,\n      awards: grammysAwards,\n      awardCountForArist: props.grammysCountArtist,\n      id: 'grammy',\n      height: 130,\n      show: 'Grammys'\n    },\n    {\n      data: mtvJSON,\n      awards: mtvAwards,\n      awardCountForArist: props.mtvCountArtist,\n      id: 'mtv',\n      height: 170,\n      show: 'MTV Video Music Awards'\n    },\n    {\n      data: billboardJSON,\n      awards: billboardAwards,\n      awardCountForArist: props.billboardCountArtist,\n      id: 'billboard',\n      height: 170,\n      show: 'Billboard Music Awards'\n    },\n    {\n      data: amaJSON,\n      awards: amaAwards,\n      awardCountForArist: props.amaCountArtist,\n      id: 'ama',\n      height: 120,\n      show: 'American Music Awards'\n    },\n    {\n      data: superbowlJSON,\n      awards: superBowlAwards,\n      awardCountForArist: props.superbowlCountArtist,\n      id: 'superbowl',\n      height: 60,\n      show: 'Super Bowl Halftime Show Headliner'\n    }\n  ];\n\n  const charts = chartsConfig.map((item, index)=>{\n    if (item.awardCountForArist > 0) {\n      return <Chart data={item.data} awards={item.awards} awardCountForArist={item.awardCountForArist} id={item.id} height={item.height} show={item.show} artist={props.artist} />\n    }\n  });\n\n  return (\n    <div className=\"container\">\n      <div class=\"row mt-3\">\n        <div class=\"col-sm-6\">\n          <h1>Music Award Show Winners</h1>\n          <p>Learn more about famous music artists by seeing their awards! Choose an artist below to see their awards from the: Grammys, MTV Music Awards, Billboard Music Awards, American Music Awards and if they've headlined the Superbowl Halftime Show (not an award show but I'm considering it an honor). <i>Note: only select awards are shown for each show.</i></p>\n          <ArtistsDropdown options={artistOptions} onArtistChange={handleArtistSelection} placeholder={'Pick an Artist'} value={props.value}/>\n        </div>\n      </div>\n      <div class=\"row mt-5\">\n        <div class=\"col-sm-8\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              About this Artist\n            </div>\n            <div class=\"card-body\">\n              <h5 class=\"card-title\">{artistSummaryText()}</h5>\n              <p class=\"card-text\">{props.artistSummary}</p>\n              { props.pickedArtist ? <ReadMoreBtn artistURL={props.artistURL} /> : null }\n              { props.pickedArtist ? <FavBtn handleFavArtist={handleFavArtist} artist={props.artist} /> : null }\n            </div>\n            { props.pickedArtist ? <ArtistCardFooter /> : null }\n          </div>\n        </div>\n        <div class=\"col-sm-4\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              My Favorite Artists\n            </div>\n            <div class=\"card-body\">\n              {pickedFavs()}\n            </div>\n            <div class=\"card-footer text-muted\">\n              <small>Pick an artist. Then select the ❤️ icon to 'bookmark' that artist. Click X to remove them.</small>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"row mt-5\">\n        <div class=\"col-sm-12\">\n          <div class=\"card\">\n            <div class=\"card-header\">\n              Awards for this Artist\n            </div>\n            <div class=\"card-body\">\n              <h5 class=\"card-title\">{artistAwardText()}</h5>\n              {charts}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","/Users/reneelightner/Desktop/final/src/Nav.js",[],"/Users/reneelightner/Desktop/final/src/Favs.js",[],"/Users/reneelightner/Desktop/final/src/fixArtistSummary.js",["74"],"\nexport default function fixArtistSummary(artist, summary) {\n    switch (artist) {\n      case 'Chris Brown': {\n        summary = summary.split('There is more than one artist with this name:\\n\\n1)');\n        return summary[1];\n      }\n      case 'Creed': {\n        summary = summary.split('A German metal band\\n\\n');\n        return summary[1];\n      }\n      case 'Eve': {\n        summary = summary.split('EVE - Brazilian girl group\\n\\n1.');\n        return summary[1];\n      }\n      case 'John Mayer': {\n        summary = summary.split('Indo Jazz Fusions\\n\\n1)');\n        return summary[1];\n      }\n      case 'Next': {\n        summary = summary.split('A Japanese hardcore/\"melodicore\"/\"screamo\" band\\n\\n1.-');\n        return summary[1];\n      }\n      case 'Nirvana': {\n        summary = summary.split('listed in order of prominence:\\n\\n1)');\n        return summary[1];\n      }\n      case 'Roger Miller': {\n        summary = summary.split('songwriter from Massachusetts, USA\\n\\n1)');\n        return summary[1];\n      }\n      case 'The Cars': {\n        summary = summary.split('There is more than one artist with this name:\\n\\n1)');\n        return summary[1];\n      }\n      case 'Zayn': {\n        summary = summary.split('There are two artists with this name:\\n\\n1.)');\n        return summary[1];\n      }\n    }\n  }","/Users/reneelightner/Desktop/final/src/Chart.js",["75","76","77","78"],"import React from 'react';\nimport * as d3 from 'd3';\nimport { useD3 } from './useD3.js';\n\nexport default function Chart(props) {\n\n    const ref = useD3(\n        (svg) => {\n            d3.selectAll(`svg#${props.id} circle`).remove();\n\n            const height = props.height;\n            const width = 893;\n            const margin = {top: 1, right: 15, bottom: 20, left: 110};\n\n            const parseTime = d3.timeParse(\"%Y\");\n            props.data.map(d => { return {'YEAR' : parseTime(d.YEAR)} });\n\n            const x = d3.scaleTime()\n                .rangeRound([margin.right, width-margin.right-margin.left])\n                .domain(d3.extent(props.data, function(d) { return parseTime(d.YEAR); }));\n\n            const y = d3.scaleBand()\n                .domain(props.awards)\n                .rangeRound([0, height-margin.top-margin.bottom])\n                .padding(1);\n\n            const xAxis = g => g\n                .attr(\"transform\", `translate(${margin.left},${height - margin.bottom})`)\n                .call(d3.axisBottom(x));\n\n            const yAxis = g => g\n                .attr(\"transform\", `translate(${margin.left},${margin.top})`)\n                .call(d3.axisLeft(y));\n\n            svg.select(\".x-axis\").call(xAxis);\n            svg.select(\".y-axis\").call(yAxis);\n\n            svg\n                .select(\".plot\")\n                .append(\"text\")\n                .attr(\"class\", `tooltip-artist-${props.id}`)\n                .style(\"pointer-events\", \"none\")\n                .style(\"font-size\", \"10px\")\n                .style(\"font-weight\", \"bold\")\n                .style(\"opacity\", 0);\n\n            svg\n                .select(\".plot\")\n                .attr(\"transform\", `translate(${margin.left},${margin.top})`)\n                .selectAll(\"dot\")\n                .data(props.data)\n                .enter()\n                .append(\"circle\")\n                .attr(\"class\", (d)=>{ if(d.ARTIST !== \"\"){return \"circle\"}else{return \"remove-circle\"} })\n                .attr(\"cy\", d => y(d.AWARD) )\n                .attr(\"cx\", d => x(parseTime(d.YEAR)) )\n                .attr(\"i\", (d,i) => i )\n                .attr(\"artist\", d => d['ART-1'].split(\" \").join(\"\"))\n                .attr(\"artist2\", d => {if(d['ART-2']) {return d['ART-2'].split(\" \").join(\"\")}})\n                .attr(\"artist3\", d => {if(d['ART-3']) {return d['ART-3'].split(\" \").join(\"\")}})\n                .attr(\"artist4\", d => {if(d['ART-4']) {return d['ART-4'].split(\" \").join(\"\")}})\n                .attr(\"artist5\", d => {if(d['ART-5']) {return d['ART-5'].split(\" \").join(\"\")}})\n                .attr(\"artist6\", d => {if(d['ART-6']) {return d['ART-6'].split(\" \").join(\"\")}})\n                .attr(\"r\", 5.5)\n                .style(\"fill\", \"#666\")\n                .attr(\"stroke-width\", 2)\n                .attr(\"stroke\", \"#fff\")\n                .on(\"mouseover\",function(d) {\n                    let index = d3.select(this).attr(\"i\"); \n                    let cynum = d3.select(this).attr(\"cy\");\n                    let cxnum = d3.select(this).attr(\"cx\");\n                    let side;\n                    if (index > props.data.length/2) {side = 'left';} else {side = 'right';}\n                    d3.select(this).attr(\"stroke\", \"#666\");\n                    d3.select(this).style(\"opacity\", 1);\n                    d3.select(`text.tooltip-artist-${props.id}`)\n                        .text(() => {\n                            let text = props.data[index]['ARTIST'];\n                            if (props.data[index]['WINNER']) {text = text+', '+ props.data[index]['WINNER'];}\n                            return text;\n                        })\n                        .attr(\"dy\", () => {return +cynum-7})\n                        .attr(\"dx\", () => {if (side == \"left\") {return (+cxnum + 5)} else {return (+cxnum - 5)} })\n                        .attr(\"text-anchor\", () => { if (side == \"left\") {return \"start\"} else {return \"end\"} })\n                        .style(\"opacity\", 1);\n                })\n                .on(\"mouseout\",function(d,i) {\n                    if (props.artist != 'none') {d3.select(this).style(\"opacity\", 0.1);}\n                    d3.selectAll(\"circle.circle.selected-artist\").style(\"opacity\", 1);\n                    d3.select(this).attr(\"stroke\", \"#fff\");\n                    d3.select(`text.tooltip-artist-${props.id}`).style(\"opacity\", 0);\n                });\n\n            d3.selectAll(\"circle.remove-circle\").remove();\n\n            let artistSelected = props.artist.split(\" \").join(\"\");\n            if (props.artist != 'none') { d3.selectAll(\"circle.circle\").style(\"opacity\", 0.1) }\n            d3.selectAll(\"circle.circle[artist='\"+artistSelected+\"']\").classed('selected-artist', true).style(\"opacity\", 1);\n            d3.selectAll(\"circle.circle[artist2='\"+artistSelected+\"']\").classed('selected-artist', true).style(\"opacity\", 1);\n            d3.selectAll(\"circle.circle[artist3='\"+artistSelected+\"']\").classed('selected-artist', true).style(\"opacity\", 1);\n            d3.selectAll(\"circle.circle[artist4='\"+artistSelected+\"']\").classed('selected-artist', true).style(\"opacity\", 1);\n            d3.selectAll(\"circle.circle[artist5='\"+artistSelected+\"']\").classed('selected-artist', true).style(\"opacity\", 1);\n            d3.selectAll(\"circle.circle[artist6='\"+artistSelected+\"']\").classed('selected-artist', true).style(\"opacity\", 1);\n        }, \n        [props.artist]\n    );\n\n    const chartDek = () => {\n        if (props.id === 'superbowl') {\n            return `Below are the headliners for the Super Bowl halftime show. Each year's performer(s) are represented by a circle (hover for more).`\n        } else {\n            return <span>Below are <i>select</i> awards at the {props.show}. Each year's winning artist is represented by a circle (hover for more).</span>\n        }\n    }\n\n    return(\n        <div class=\"mt-5\">\n            <h5>{props.show}</h5>\n            <div>\n                <p className=\"winning-artist\">{props.awardCountForArist} for {props.artist} = <span></span></p>\n                <div>\n                    <small>{chartDek()}</small>\n                </div>\n            </div>\n            <svg\n                id={props.id}\n                ref={ref}\n                style={{\n                    height: props.height,\n                    width: 893\n                }}\n            >\n                <g className='plot' />\n                <g className='x-axis' />\n                <g className='y-axis' />\n            </svg>\n        </div>\n    )\n\n}","/Users/reneelightner/Desktop/final/src/useD3.js",["79","80"],"import {useEffect, useRef} from 'react';\nimport * as d3 from 'd3';\n\nexport const useD3 = (renderChartFn, dependencies) => {\n    const ref = useRef();\n\n    useEffect(() => {\n        renderChartFn(d3.select(ref.current));\n        return () => {};\n      }, dependencies);\n    return ref;\n}","/Users/reneelightner/Desktop/final/src/ArtistCardFooter.js",[],"/Users/reneelightner/Desktop/final/src/ReadMoreBtn.js",[],"/Users/reneelightner/Desktop/final/src/FavBtn.js",[],"/Users/reneelightner/Desktop/final/src/ArtistsDropdown.js",[],{"ruleId":"81","severity":1,"message":"82","line":67,"column":20,"nodeType":"83","messageId":"84","endLine":67,"endColumn":22},{"ruleId":"81","severity":1,"message":"82","line":68,"column":20,"nodeType":"83","messageId":"84","endLine":68,"endColumn":22},{"ruleId":"81","severity":1,"message":"82","line":69,"column":20,"nodeType":"83","messageId":"84","endLine":69,"endColumn":22},{"ruleId":"81","severity":1,"message":"82","line":70,"column":20,"nodeType":"83","messageId":"84","endLine":70,"endColumn":22},{"ruleId":"81","severity":1,"message":"82","line":71,"column":20,"nodeType":"83","messageId":"84","endLine":71,"endColumn":22},{"ruleId":"81","severity":1,"message":"82","line":72,"column":20,"nodeType":"83","messageId":"84","endLine":72,"endColumn":22},{"ruleId":"81","severity":1,"message":"82","line":112,"column":20,"nodeType":"83","messageId":"84","endLine":112,"endColumn":22},{"ruleId":"85","severity":1,"message":"86","line":227,"column":48,"nodeType":"87","messageId":"88","endLine":227,"endColumn":50},{"ruleId":"89","severity":1,"message":"90","line":3,"column":5,"nodeType":"91","messageId":"92","endLine":40,"endColumn":6},{"ruleId":"81","severity":1,"message":"82","line":83,"column":53,"nodeType":"83","messageId":"84","endLine":83,"endColumn":55},{"ruleId":"81","severity":1,"message":"82","line":84,"column":63,"nodeType":"83","messageId":"84","endLine":84,"endColumn":65},{"ruleId":"81","severity":1,"message":"93","line":88,"column":38,"nodeType":"83","messageId":"84","endLine":88,"endColumn":40},{"ruleId":"81","severity":1,"message":"93","line":97,"column":30,"nodeType":"83","messageId":"84","endLine":97,"endColumn":32},{"ruleId":"94","severity":1,"message":"95","line":10,"column":10,"nodeType":"96","endLine":10,"endColumn":22},{"ruleId":"94","severity":1,"message":"97","line":10,"column":10,"nodeType":"96","endLine":10,"endColumn":22,"suggestions":"98"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","Identifier","React Hook useEffect has a missing dependency: 'renderChartFn'. Either include it or remove the dependency array. If 'renderChartFn' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["99"],{"desc":"100","fix":"101"},"Update the dependencies array to be: [renderChartFn]",{"range":"102","text":"103"},[254,266],"[renderChartFn]"]